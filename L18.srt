1
0-1:59:59,500 --> 00:00:03,400

2
00:00:03,400 --> 00:00:04,900
PROFESSOR: Today
we're going to talk

3
00:00:04,900 --> 00:00:08,570
about protein folding and its
relation to linkage folding.

4
00:00:08,570 --> 00:00:12,700
We're going to look at a
mechanical model of proteins.

5
00:00:12,700 --> 00:00:15,660
This is an example of a
protein from lecture one.

6
00:00:15,660 --> 00:00:17,460
There's a ton out
there in this place

7
00:00:17,460 --> 00:00:20,700
called the protein data
bank, all freely available.

8
00:00:20,700 --> 00:00:23,234
It's really hard to
get pictures like this.

9
00:00:23,234 --> 00:00:24,650
But you get some
idea that there's

10
00:00:24,650 --> 00:00:26,750
a linkage embedded in here.

11
00:00:26,750 --> 00:00:30,540
You see various little
spheres and edges.

12
00:00:30,540 --> 00:00:31,850
That's, of course, not reality.

13
00:00:31,850 --> 00:00:33,770
Those spheres are
actually atoms and they're

14
00:00:33,770 --> 00:00:35,420
kind of amorphous blobs.

15
00:00:35,420 --> 00:00:38,000
The edges are chemical bonds.

16
00:00:38,000 --> 00:00:39,109
And those are connections.

17
00:00:39,109 --> 00:00:41,400
We don't know whether they're--
it's not really matter,

18
00:00:41,400 --> 00:00:42,865
but it's force.

19
00:00:42,865 --> 00:00:45,690

20
00:00:45,690 --> 00:00:47,010
This is a rather messy picture.

21
00:00:47,010 --> 00:00:49,920
This is what a protein
folds into, some 3D shape.

22
00:00:49,920 --> 00:00:53,687
Most proteins fold
consistently into one shape.

23
00:00:53,687 --> 00:00:55,270
We don't really know
how that happens.

24
00:00:55,270 --> 00:00:57,950
We can't watch it happen.

25
00:00:57,950 --> 00:01:03,180
So the big challenge is
to know how proteins fold.

26
00:01:03,180 --> 00:01:05,650
Given a protein, what
does it fold into?

27
00:01:05,650 --> 00:01:07,280
That's the protein
folding problem.

28
00:01:07,280 --> 00:01:10,790
Major unsolved problem
in biology, biochemistry.

29
00:01:10,790 --> 00:01:13,940
The protein design problem is
I want to make a particular 3D

30
00:01:13,940 --> 00:01:17,070
shape so that it docks into
something, binds to a virus,

31
00:01:17,070 --> 00:01:22,640
whatever, what protein should
I synthesize in order for it

32
00:01:22,640 --> 00:01:24,570
to fold into that shape?

33
00:01:24,570 --> 00:01:26,940
That is potentially an easier
question algorithmically

34
00:01:26,940 --> 00:01:30,450
and it's the really useful one
from a drug design standpoint.

35
00:01:30,450 --> 00:01:33,120
Some new virus comes
along, you design a drug

36
00:01:33,120 --> 00:01:36,140
to attack it and only
it, you build it.

37
00:01:36,140 --> 00:01:38,840
Usually you would manufacture
some synthetic DNA,

38
00:01:38,840 --> 00:01:42,600
you feed it into the
cell, DNA goes to the RNA,

39
00:01:42,600 --> 00:01:45,740
goes to the mRNA,
goes to the protein.

40
00:01:45,740 --> 00:01:49,450
You all remember
biology 101, hopefully.

41
00:01:49,450 --> 00:01:51,630
We don't need to
know much about it.

42
00:01:51,630 --> 00:01:54,145
If you look at what's called
the backbone of the protein,

43
00:01:54,145 --> 00:01:57,480
a protein's basically a chain
and attached to the chain

44
00:01:57,480 --> 00:01:59,160
are various amino acids.

45
00:01:59,160 --> 00:02:01,690
Today I'm going to ignore
the amino acids, which

46
00:02:01,690 --> 00:02:05,770
is a little crazy, and just
think about the backbone chain.

47
00:02:05,770 --> 00:02:08,882
Backbone chain looks
something like this.

48
00:02:08,882 --> 00:02:11,090
One of the challenges of
video recording a class is I

49
00:02:11,090 --> 00:02:15,940
can only use copyright free
or Creative Commons images.

50
00:02:15,940 --> 00:02:19,680
This one, I couldn't get
one, so I had to draw it.

51
00:02:19,680 --> 00:02:21,090
There's various
measurements here

52
00:02:21,090 --> 00:02:22,830
in certain numbers of angstroms.

53
00:02:22,830 --> 00:02:24,220
Those are the chemical bonds.

54
00:02:24,220 --> 00:02:31,090
Various atoms here-- nitrogen,
carbon, and so on, hydrogen.

55
00:02:31,090 --> 00:02:33,760
But basically, it's a chain
that zigzags back and forth.

56
00:02:33,760 --> 00:02:35,170
You can also see
the angles here.

57
00:02:35,170 --> 00:02:37,545
They're not quite all the
same, but they're very similar.

58
00:02:37,545 --> 00:02:39,605
All the lengths in
the angles are close.

59
00:02:39,605 --> 00:02:42,450

60
00:02:42,450 --> 00:02:44,451
It zigzags-- this is
really in three dimensions.

61
00:02:44,451 --> 00:02:46,700
I tried to draw the spheres
so you could see the three

62
00:02:46,700 --> 00:02:48,580
dimensionality, but
it's a little tricky.

63
00:02:48,580 --> 00:02:51,190
And then attached on the
sides are the amino acids.

64
00:02:51,190 --> 00:02:53,300
I'm going to focus
just on the backbone.

65
00:02:53,300 --> 00:02:57,100
The way this thing is allowed
to fold-- these lengths,

66
00:02:57,100 --> 00:02:59,094
as far as we know,
are pretty static.

67
00:02:59,094 --> 00:03:00,760
They probably would
jiggle a little bit.

68
00:03:00,760 --> 00:03:02,350
But you can think
of them as edges.

69
00:03:02,350 --> 00:03:04,710
So you can think of
this as a linkage.

70
00:03:04,710 --> 00:03:07,180
The catch is, also,
the angles are

71
00:03:07,180 --> 00:03:11,350
fixed because the way this atom
wants to bind to other things

72
00:03:11,350 --> 00:03:13,560
has very fixed angle patterns.

73
00:03:13,560 --> 00:03:16,580
If you ever played with a
chemistry construction set,

74
00:03:16,580 --> 00:03:17,650
that's how they work.

75
00:03:17,650 --> 00:03:21,020
They have holes at
just particular angles.

76
00:03:21,020 --> 00:03:22,810
So if you think of
like a robotic arm,

77
00:03:22,810 --> 00:03:27,090
normally-- like here, I have
it two edge robotic arm,

78
00:03:27,090 --> 00:03:27,830
let's say.

79
00:03:27,830 --> 00:03:30,413
Normally, you have two degrees
of freedom in three dimensions.

80
00:03:30,413 --> 00:03:35,930
You can change the angle and
you can spin around this edge.

81
00:03:35,930 --> 00:03:38,110
Now, it's saying the angle
is fixed-- for example,

82
00:03:38,110 --> 00:03:39,710
here it's, say, at 90 degrees.

83
00:03:39,710 --> 00:03:41,500
All I can do is spin.

84
00:03:41,500 --> 00:03:45,450
I'm not allowed to flex
my muscle in this way.

85
00:03:45,450 --> 00:03:46,420
So that is the model.

86
00:03:46,420 --> 00:03:49,780
All of-- in this case, we have
a tree-- all of the angles

87
00:03:49,780 --> 00:03:51,260
here are fixed.

88
00:03:51,260 --> 00:03:54,160
But you can still, for example,
take this entire sub chain

89
00:03:54,160 --> 00:03:56,180
and spin it around this edge.

90
00:03:56,180 --> 00:03:58,587
That'll preserve all the
angles and all the lengths.

91
00:03:58,587 --> 00:03:59,920
That's all you're allowed to do.

92
00:03:59,920 --> 00:04:01,800
You take an edge,
you spin it-- spin

93
00:04:01,800 --> 00:04:04,990
one half of the edge
relative to the other half.

94
00:04:04,990 --> 00:04:09,210
These are called
fixed angle linkages.

95
00:04:09,210 --> 00:04:11,630
And they have been studied
quite a lot because

96
00:04:11,630 --> 00:04:13,490
of their connection
to protein folding.

97
00:04:13,490 --> 00:04:19,459

98
00:04:19,459 --> 00:04:21,206
So embedded in the
term linkage, we

99
00:04:21,206 --> 00:04:22,830
assume that the edge
lengths are fixed,

100
00:04:22,830 --> 00:04:27,920
and then we add the constraint
that the angles are fixed.

101
00:04:27,920 --> 00:04:29,960
And the motivation
is the backbone

102
00:04:29,960 --> 00:04:34,030
is something like-- the
backbone of a protein

103
00:04:34,030 --> 00:04:35,980
is something like
a fixed angle tree.

104
00:04:35,980 --> 00:04:38,980

105
00:04:38,980 --> 00:04:40,450
Of course, it's
not much of a tree.

106
00:04:40,450 --> 00:04:41,710
Most of it is a chain.

107
00:04:41,710 --> 00:04:45,057
There's just small
objects hanging off,

108
00:04:45,057 --> 00:04:46,515
and if you add the
amino acid there

109
00:04:46,515 --> 00:04:49,479
are bigger things hanging
off, but still constant size.

110
00:04:49,479 --> 00:04:50,520
They'll have some cycles.

111
00:04:50,520 --> 00:04:51,670
They're not trees.

112
00:04:51,670 --> 00:04:56,500
But it's slightly
more approximately--

113
00:04:56,500 --> 00:04:59,260
I should draw wavier lines.

114
00:04:59,260 --> 00:05:01,270
It's a chain.

115
00:05:01,270 --> 00:05:04,080
Usually an open chain although
occasionally a closed chain.

116
00:05:04,080 --> 00:05:10,910

117
00:05:10,910 --> 00:05:13,710
So we think a lot about fixed
angle chain and sometimes about

118
00:05:13,710 --> 00:05:15,420
fixed angle trees.

119
00:05:15,420 --> 00:05:18,810
Now, fixed angle linkages
are harder to think

120
00:05:18,810 --> 00:05:20,740
about than universal
joints-- that's

121
00:05:20,740 --> 00:05:23,570
the usual kind of linkage.

122
00:05:23,570 --> 00:05:26,520
So we know 3D linkages
are kind of tough.

123
00:05:26,520 --> 00:05:28,520
Nonetheless, we found
lots of really interesting

124
00:05:28,520 --> 00:05:30,320
mathematical problems
to solve here,

125
00:05:30,320 --> 00:05:32,780
and that is the topic of today.

126
00:05:32,780 --> 00:05:36,750
At some level, we are
thinking about the mechanics

127
00:05:36,750 --> 00:05:37,790
of protein folding.

128
00:05:37,790 --> 00:05:39,350
We're throwing away energy.

129
00:05:39,350 --> 00:05:42,250
We're throwing
away the actuators

130
00:05:42,250 --> 00:05:44,720
in real life that
make proteins fold.

131
00:05:44,720 --> 00:05:47,500
We're just imagining,
given this mechanical model

132
00:05:47,500 --> 00:05:51,190
of how a protein might
fold, what's possible.

133
00:05:51,190 --> 00:05:53,920
So in some sense, it's
broader than reality.

134
00:05:53,920 --> 00:05:56,800
And the hope is you find
an interesting algorithm

135
00:05:56,800 --> 00:05:59,420
for how to fold
these protein chains.

136
00:05:59,420 --> 00:06:02,910
And maybe that's the algorithm
that nature is implementing.

137
00:06:02,910 --> 00:06:04,920
That's the kind of
general picture.

138
00:06:04,920 --> 00:06:08,620
We're not constrained
by reality,

139
00:06:08,620 --> 00:06:11,430
and by how nature
actually folds things.

140
00:06:11,430 --> 00:06:14,540

141
00:06:14,540 --> 00:06:22,132
So I'm going to talk today
about four main problems here.

142
00:06:22,132 --> 00:06:24,640
The first one's called span.

143
00:06:24,640 --> 00:06:26,015
Second one's called flattening.

144
00:06:26,015 --> 00:06:28,670

145
00:06:28,670 --> 00:06:31,995
Third one is flat
state connectivity.

146
00:06:31,995 --> 00:06:40,830

147
00:06:40,830 --> 00:06:46,270
And the fourth one is locked,
our good friend locked chains.

148
00:06:46,270 --> 00:06:49,759

149
00:06:49,759 --> 00:06:51,300
And of course there
are locked chains

150
00:06:51,300 --> 00:06:53,944
because we're constraining
linkages even more than before.

151
00:06:53,944 --> 00:06:56,360
So you could take knitting
needles, it'll still be locked.

152
00:06:56,360 --> 00:06:58,190
So you add extra constraints.

153
00:06:58,190 --> 00:06:59,627
Makes it harder to fold.

154
00:06:59,627 --> 00:07:01,960
But there are actually some
interesting positive results

155
00:07:01,960 --> 00:07:05,300
we can give of chains that
are not locked in some sense.

156
00:07:05,300 --> 00:07:08,010
And flat state connectivity is
about the same kind of thing,

157
00:07:08,010 --> 00:07:09,630
where instead of worrying
about getting from anywhere

158
00:07:09,630 --> 00:07:11,080
to anywhere, we just
worry about getting

159
00:07:11,080 --> 00:07:13,010
from one flat state
to another flat state.

160
00:07:13,010 --> 00:07:15,000
Flat means lying in a plane.

161
00:07:15,000 --> 00:07:18,440
Flattening is about is
there such a configuration.

162
00:07:18,440 --> 00:07:22,230
And span is about
given robotic arm--

163
00:07:22,230 --> 00:07:25,700
like a more complicated one,
like with multiple edges-- how

164
00:07:25,700 --> 00:07:28,570
far apart can the endpoints
get, and how close

165
00:07:28,570 --> 00:07:29,970
can the endpoints get.

166
00:07:29,970 --> 00:07:32,190
The universal chain
is not very exciting.

167
00:07:32,190 --> 00:07:35,210
Farthest it can get is when
it's straight, and the least far

168
00:07:35,210 --> 00:07:36,790
it can get is when it's closed.

169
00:07:36,790 --> 00:07:40,220
You can always do that, I think.

170
00:07:40,220 --> 00:07:43,290
Well, no, I guess you
can't always close it up.

171
00:07:43,290 --> 00:07:45,830
That's a little nontrivial.

172
00:07:45,830 --> 00:07:47,450
But for fixed
angle linkages, you

173
00:07:47,450 --> 00:07:50,070
can't straighten out because
you have to preserve the angles.

174
00:07:50,070 --> 00:07:53,140
So it's kind of what is the
straightest like configuration,

175
00:07:53,140 --> 00:07:56,589
given that the angles are fixed.

176
00:07:56,589 --> 00:07:57,630
So let's start with span.

177
00:07:57,630 --> 00:08:09,330

178
00:08:09,330 --> 00:08:14,504
So the span of a
configuration is the distance

179
00:08:14,504 --> 00:08:15,420
between the endpoints.

180
00:08:15,420 --> 00:08:20,970

181
00:08:20,970 --> 00:08:27,880
And in general, you'll find
the max span and the min span.

182
00:08:27,880 --> 00:08:30,980
This search was
begun by a guy named

183
00:08:30,980 --> 00:08:35,390
Mike Soss, who was a
PhD student at McGill.

184
00:08:35,390 --> 00:08:39,539
And he proved that
if you want to find,

185
00:08:39,539 --> 00:08:42,549
for example, a flat
state that lives

186
00:08:42,549 --> 00:08:54,960
in two dimensions with the
minimum or the maximum span,

187
00:08:54,960 --> 00:08:55,940
this is NP-hard.

188
00:08:55,940 --> 00:08:58,840

189
00:08:58,840 --> 00:09:02,360
This is in his PhD thesis.

190
00:09:02,360 --> 00:09:04,582
Question?

191
00:09:04,582 --> 00:09:07,052
AUDIENCE: If you have a
linkage or [INAUDIBLE]

192
00:09:07,052 --> 00:09:12,239
chain that actually loops
around, is there a span

193
00:09:12,239 --> 00:09:13,480
because there is no endpoint?

194
00:09:13,480 --> 00:09:15,850
PROFESSOR: Oh, here I'm
assuming open chain--

195
00:09:15,850 --> 00:09:23,250
I should say that--
which most proteins are.

196
00:09:23,250 --> 00:09:25,260
I've been talking
about trees and stuff.

197
00:09:25,260 --> 00:09:27,710
Here I mean chain, otherwise
there aren't two end points

198
00:09:27,710 --> 00:09:29,830
to think about.

199
00:09:29,830 --> 00:09:32,070
Good.

200
00:09:32,070 --> 00:09:34,540
So here are his
NP-hardness proofs.

201
00:09:34,540 --> 00:09:36,680
[INAUDIBLE] the problems
are NP-complete.

202
00:09:36,680 --> 00:09:39,380
They're pretty simple.

203
00:09:39,380 --> 00:09:42,259
The problem here we're
reducing from is partition.

204
00:09:42,259 --> 00:09:43,550
I give you a bunch of integers.

205
00:09:43,550 --> 00:09:47,160
I want to divide them into
two halves of equal sum.

206
00:09:47,160 --> 00:09:51,720
And the top example is
minimum flat span problem.

207
00:09:51,720 --> 00:09:55,740
So you make an orthogonal chain
where the horizontal edges are

208
00:09:55,740 --> 00:09:58,720
long and they're proportional
to the integers you're given,

209
00:09:58,720 --> 00:10:00,990
the vertical edges
are really tiny.

210
00:10:00,990 --> 00:10:04,730
And so what you'd like to do--
all you can do is sort of flip

211
00:10:04,730 --> 00:10:06,450
because you have to
stay in the plane,

212
00:10:06,450 --> 00:10:08,420
you can flip one of
the vertical edges,

213
00:10:08,420 --> 00:10:11,190
say, and make any of these
edges go left or right.

214
00:10:11,190 --> 00:10:13,800
You get that freedom.

215
00:10:13,800 --> 00:10:15,340
So each integer,
you get to choose.

216
00:10:15,340 --> 00:10:18,707
Do I go right by that amount and
or do I go left by that amount?

217
00:10:18,707 --> 00:10:21,040
And if the amount you go left
is equal to the amount you

218
00:10:21,040 --> 00:10:22,873
go right-- in other
words, is it partitioned

219
00:10:22,873 --> 00:10:25,750
into two equal sums-- then
those endpoints will be aligned,

220
00:10:25,750 --> 00:10:27,500
and then their distance
will be very tiny.

221
00:10:27,500 --> 00:10:28,874
Otherwise, it will
be quite large

222
00:10:28,874 --> 00:10:31,360
because the horizontal
distances are all big.

223
00:10:31,360 --> 00:10:35,660
So it's kind of a very
easy NP-hardness proof.

224
00:10:35,660 --> 00:10:39,410
To maximize your
flat span, instead

225
00:10:39,410 --> 00:10:41,050
of mapping your
integers on to lengths,

226
00:10:41,050 --> 00:10:43,190
you map them on to
angles-- return angles.

227
00:10:43,190 --> 00:10:45,670
I won't specify
that too precisely.

228
00:10:45,670 --> 00:10:48,760
But again, if you make
your total counterclockwise

229
00:10:48,760 --> 00:10:51,430
turn equal to your
total clockwise turn,

230
00:10:51,430 --> 00:10:54,730
then the two end edges,
which are super, super long,

231
00:10:54,730 --> 00:10:56,170
will be parallel.

232
00:10:56,170 --> 00:10:59,030
And to maximize the distance
between the endpoints,

233
00:10:59,030 --> 00:11:00,650
you want them to be parallel.

234
00:11:00,650 --> 00:11:06,190
If you make them go some
other angle, they're closer.

235
00:11:06,190 --> 00:11:11,390
Now, both of these proofs
rely on the requirement

236
00:11:11,390 --> 00:11:13,130
that you want a
flat configuration

237
00:11:13,130 --> 00:11:14,970
with minimum or maximum span.

238
00:11:14,970 --> 00:11:16,870
Now, there's a claim
that flat configurations

239
00:11:16,870 --> 00:11:21,800
matter for proteins, so
it's a natural constraint.

240
00:11:21,800 --> 00:11:23,300
But what about the
general problem?

241
00:11:23,300 --> 00:11:25,440
What about, I have something
in three dimensions,

242
00:11:25,440 --> 00:11:28,530
I want to maximize-- I have
a fixed angle chain in 3D,

243
00:11:28,530 --> 00:11:30,370
maximize or minimize the span?

244
00:11:30,370 --> 00:11:34,030

245
00:11:34,030 --> 00:11:35,790
Both of those problems are open.

246
00:11:35,790 --> 00:11:38,510
Can you solve them
in polynomial time?

247
00:11:38,510 --> 00:11:52,210
For 3D max span, so the non flat
version just for maximization,

248
00:11:52,210 --> 00:11:53,440
there's been a lot of work.

249
00:11:53,440 --> 00:11:55,750
And there are two
papers on the subject.

250
00:11:55,750 --> 00:11:58,740
One of them is by
Nadia and Joe O'Rourke.

251
00:11:58,740 --> 00:12:02,330
Another one is by
Borcea and Streinu.

252
00:12:02,330 --> 00:12:05,910
And I just want to
quickly summarize

253
00:12:05,910 --> 00:12:08,340
that because there's
a lot of stuff there.

254
00:12:08,340 --> 00:12:12,930
But essentially, they find what
the structure of those spans

255
00:12:12,930 --> 00:12:13,430
look like.

256
00:12:13,430 --> 00:12:17,210
I have an early figure
that's in our book

257
00:12:17,210 --> 00:12:19,370
before all this work was done.

258
00:12:19,370 --> 00:12:24,830
The simple chain, this black guy
at 1, 2 3, 4 bars open chain,

259
00:12:24,830 --> 00:12:27,210
and in that black three
dimensional state,

260
00:12:27,210 --> 00:12:32,090
it maximizes the span,
the green span there.

261
00:12:32,090 --> 00:12:33,480
And if you look
from above, which

262
00:12:33,480 --> 00:12:36,900
is this picture-- of course,
the end points look much closer

263
00:12:36,900 --> 00:12:42,300
in projection-- and the red
configuration is the max span

264
00:12:42,300 --> 00:12:44,550
if you restrict to
flat configurations.

265
00:12:44,550 --> 00:12:47,290
So here, of course,
3D buys you something.

266
00:12:47,290 --> 00:12:49,370
In general, it always will.

267
00:12:49,370 --> 00:12:51,210
An interesting thing
is that this max

268
00:12:51,210 --> 00:12:56,240
span-- the green line--
passes through another vertex.

269
00:12:56,240 --> 00:12:57,840
It seems kind of weird.

270
00:12:57,840 --> 00:13:01,240
And in fact, there's a
general theorem there

271
00:13:01,240 --> 00:13:05,262
sort of characterizing the
structure of these chains.

272
00:13:05,262 --> 00:13:06,720
It's still not
known whether we can

273
00:13:06,720 --> 00:13:08,330
solve this problem
in polynomial time.

274
00:13:08,330 --> 00:13:23,320
But for orthogonal chains, where
all the angles are 90 degrees,

275
00:13:23,320 --> 00:13:27,080
we can solve that in
linear time, I guess.

276
00:13:27,080 --> 00:13:30,990

277
00:13:30,990 --> 00:13:33,450
And here's what it looks like.

278
00:13:33,450 --> 00:13:38,895

279
00:13:38,895 --> 00:13:40,520
Suppose you have some
orthogonal chain.

280
00:13:40,520 --> 00:13:42,686
Orthogonal chains are nice
because you can draw them

281
00:13:42,686 --> 00:13:44,390
in the plane as a staircase.

282
00:13:44,390 --> 00:13:46,305
So there's a nice
canonical configuration.

283
00:13:46,305 --> 00:13:49,920

284
00:13:49,920 --> 00:13:56,330
One way to think about
how to find the max span

285
00:13:56,330 --> 00:13:59,540
configuration-- I'm just
going to give a high level

286
00:13:59,540 --> 00:14:01,890
overview here, this won't
be a complete algorithm--

287
00:14:01,890 --> 00:14:04,600
is you triangulated
that staircase

288
00:14:04,600 --> 00:14:06,534
in this sort of obvious
way of connecting

289
00:14:06,534 --> 00:14:08,075
every endpoint to
the one, two ahead.

290
00:14:08,075 --> 00:14:11,790

291
00:14:11,790 --> 00:14:15,780
And think about this as like a
body that's hinging around here

292
00:14:15,780 --> 00:14:19,019
because I can spin-- if I spin
the left part of this chain

293
00:14:19,019 --> 00:14:21,060
around this edge, it's
like hinging that triangle

294
00:14:21,060 --> 00:14:22,280
around that hinge.

295
00:14:22,280 --> 00:14:23,064
Same thing.

296
00:14:23,064 --> 00:14:24,480
You could think
of these triangles

297
00:14:24,480 --> 00:14:27,020
as just being hinged together,
like in rigid origami.

298
00:14:27,020 --> 00:14:29,570

299
00:14:29,570 --> 00:14:32,440
It's the same class of motions.

300
00:14:32,440 --> 00:14:35,600
And now you can--
what I'm going to do

301
00:14:35,600 --> 00:14:40,600
is compute a shortest path in
this surface from here to here.

302
00:14:40,600 --> 00:14:42,940
Confusingly, this is called
a geodesic shortest path

303
00:14:42,940 --> 00:14:44,890
although it's not really
related to geodesics

304
00:14:44,890 --> 00:14:47,370
from polyhedral surfaces.

305
00:14:47,370 --> 00:14:48,990
But if I compute
a shortest path,

306
00:14:48,990 --> 00:14:50,810
it's going to go
like to this vertex

307
00:14:50,810 --> 00:14:52,995
and then probably
to that vertex.

308
00:14:52,995 --> 00:14:55,520
But I'm constrained to
stay inside the union

309
00:14:55,520 --> 00:14:56,350
of those triangles.

310
00:14:56,350 --> 00:14:58,840
I want to go from one
endpoint to another.

311
00:14:58,840 --> 00:15:03,190
Then I claim that--
OK, these two edges

312
00:15:03,190 --> 00:15:06,800
will stay planar, of course
they form a triangle-- I claim

313
00:15:06,800 --> 00:15:09,770
these four edges
will stay planar,

314
00:15:09,770 --> 00:15:12,420
and in the orthogonal
case they'll stay zigzag.

315
00:15:12,420 --> 00:15:15,930
And then also these two guys
will stay in their own plane.

316
00:15:15,930 --> 00:15:19,240
And then I claim that actually
this wiggly line, which

317
00:15:19,240 --> 00:15:21,560
is not straight
because it bends here

318
00:15:21,560 --> 00:15:24,120
and it bends here, the total
length of that wiggly line

319
00:15:24,120 --> 00:15:25,680
is the max span.

320
00:15:25,680 --> 00:15:29,080
And you achieve that by folding
this planar part with respect

321
00:15:29,080 --> 00:15:31,690
to this planar part with
respect to this planar part

322
00:15:31,690 --> 00:15:36,032
so that the wiggly lines
become aligned and straight.

323
00:15:36,032 --> 00:15:37,240
And that's very hard to draw.

324
00:15:37,240 --> 00:15:39,220
But it can be done,
and that's what

325
00:15:39,220 --> 00:15:41,600
you do in the orthogonal
case and that gives you

326
00:15:41,600 --> 00:15:45,260
the answer in linear
time with enough work.

327
00:15:45,260 --> 00:15:47,900

328
00:15:47,900 --> 00:15:50,180
For non orthogonal
though, it's open

329
00:15:50,180 --> 00:15:52,380
whether you can do this
in polynomial time.

330
00:15:52,380 --> 00:15:54,193
Maybe it's NP-hard, actually.

331
00:15:54,193 --> 00:15:54,734
I don't know.

332
00:15:54,734 --> 00:16:05,460

333
00:16:05,460 --> 00:16:07,990
That's all I want
to say about span.

334
00:16:07,990 --> 00:16:09,285
Next, we go to flattening.

335
00:16:09,285 --> 00:16:20,050

336
00:16:20,050 --> 00:16:22,140
The first question
about flattening,

337
00:16:22,140 --> 00:16:24,384
and the main one
we'll talk about here

338
00:16:24,384 --> 00:16:26,050
until we get to flat
state connectivity,

339
00:16:26,050 --> 00:16:32,240
is does a fixed angle chain
have a flat state at all?

340
00:16:32,240 --> 00:16:35,380
Can you even draw it in
the plane without crossing?

341
00:16:35,380 --> 00:16:39,980
So we're restricted here to
have no self intersections.

342
00:16:39,980 --> 00:16:46,680
We want flat state,
no self intersection.

343
00:16:46,680 --> 00:16:50,312

344
00:16:50,312 --> 00:16:52,770
Then there would be a question
of given some configuration,

345
00:16:52,770 --> 00:16:55,160
can I actually continuously
get to a flat state?

346
00:16:55,160 --> 00:16:58,150
But the simplest question
is ignore getting there.

347
00:16:58,150 --> 00:17:00,640
Just, is there a flat state?

348
00:17:00,640 --> 00:17:03,790
And this problem is NP-hard.

349
00:17:03,790 --> 00:17:06,380
Again, Mike Soss and his
advisor Godfried Toussaint.

350
00:17:06,380 --> 00:17:09,217

351
00:17:09,217 --> 00:17:11,300
It's a little more
complicated, but it's basically

352
00:17:11,300 --> 00:17:14,780
the same idea as that very
simple proof, which was just

353
00:17:14,780 --> 00:17:19,900
to map integers to a little
zigzag staircase here.

354
00:17:19,900 --> 00:17:23,054
So the goal is to
force x to end up

355
00:17:23,054 --> 00:17:24,970
being-- the two endpoints
of the green curve--

356
00:17:24,970 --> 00:17:25,980
to be aligned with each other.

357
00:17:25,980 --> 00:17:27,530
That will exist if
and only if there

358
00:17:27,530 --> 00:17:30,350
is a partition of
given integers.

359
00:17:30,350 --> 00:17:32,580
And there's all this
infrastructure that's

360
00:17:32,580 --> 00:17:36,600
sort of-- there's little
lock here and a key,

361
00:17:36,600 --> 00:17:38,970
and some structure on the left.

362
00:17:38,970 --> 00:17:43,490
Basically forces the
picture to look like that.

363
00:17:43,490 --> 00:17:45,700
So the first claim is
that the black stuff

364
00:17:45,700 --> 00:17:47,010
is basically unique.

365
00:17:47,010 --> 00:17:48,650
I think there's one
global reflection

366
00:17:48,650 --> 00:17:50,790
you can do that doesn't
affect anything.

367
00:17:50,790 --> 00:17:52,770
But you try any of
the other flips.

368
00:17:52,770 --> 00:17:54,690
Again, we're restricted
to flat states here.

369
00:17:54,690 --> 00:17:56,970
So there's only sort of a
bounded number of things

370
00:17:56,970 --> 00:17:59,260
you can do, a finite number
of things you can do.

371
00:17:59,260 --> 00:18:01,390
You try all of them,
they self intersect.

372
00:18:01,390 --> 00:18:03,480
So the black thing
is basically forced,

373
00:18:03,480 --> 00:18:05,550
and it forces the
endpoint-- this endpoint

374
00:18:05,550 --> 00:18:07,920
x-- from the black
side to be aligned

375
00:18:07,920 --> 00:18:10,470
with this very narrow spike.

376
00:18:10,470 --> 00:18:12,240
And because the
angles are preserved,

377
00:18:12,240 --> 00:18:13,740
that red guy's going
to be vertical.

378
00:18:13,740 --> 00:18:15,820
It can't go down
so it must go up.

379
00:18:15,820 --> 00:18:19,030
And so only if this thing is
aligned in the center, aligned

380
00:18:19,030 --> 00:18:21,270
with x-- in other
words, this problem

381
00:18:21,270 --> 00:18:26,080
has a partition-- will
this have a flat state.

382
00:18:26,080 --> 00:18:28,390
So it's not the most
exciting example.

383
00:18:28,390 --> 00:18:31,120
This is only a weak
NP-hardness proof.

384
00:18:31,120 --> 00:18:32,950
Lots of interesting
questions still

385
00:18:32,950 --> 00:18:37,450
open here, like if all the
links are the same, if they're

386
00:18:37,450 --> 00:18:40,770
all equal, then we don't know.

387
00:18:40,770 --> 00:18:43,260
Or if all the links are
even polynomially bounded,

388
00:18:43,260 --> 00:18:45,890
this needs really, really long
lengths verses really, really

389
00:18:45,890 --> 00:18:50,140
tiny links exponentially--
exponential in ratio.

390
00:18:50,140 --> 00:18:52,580
All these problems are open.

391
00:18:52,580 --> 00:18:54,180
And that's flattening.

392
00:18:54,180 --> 00:18:58,157
So we're going very quickly
because there isn't-- well,

393
00:18:58,157 --> 00:18:59,990
partly because I'm more
excited about this--

394
00:18:59,990 --> 00:19:02,920
but there's more work
in these two parts.

395
00:19:02,920 --> 00:19:04,720
So I'm going to focus on that.

396
00:19:04,720 --> 00:19:07,390
Next topic is flat
state connectivity.

397
00:19:07,390 --> 00:19:21,040

398
00:19:21,040 --> 00:19:24,370
So the idea is to think
about the configuration

399
00:19:24,370 --> 00:19:27,772
space of these fixed
angle chains, let's say.

400
00:19:27,772 --> 00:19:29,230
And we kind of know
that it's going

401
00:19:29,230 --> 00:19:31,480
to be disconnected because
there are knitting needles,

402
00:19:31,480 --> 00:19:32,820
there are nasty things.

403
00:19:32,820 --> 00:19:36,005
So there's maybe various
connective components.

404
00:19:36,005 --> 00:19:39,910

405
00:19:39,910 --> 00:19:43,975
But let's say that we really
care about flat states.

406
00:19:43,975 --> 00:19:47,090

407
00:19:47,090 --> 00:19:50,580
And the question is, are
they connected to each other?

408
00:19:50,580 --> 00:19:52,850
So in other words, do
all the flat states--

409
00:19:52,850 --> 00:19:55,440
mark them with x's--
do they all appear?

410
00:19:55,440 --> 00:19:56,830
There's only finitely many.

411
00:19:56,830 --> 00:19:58,945
So configurations,
there's this continuum

412
00:19:58,945 --> 00:20:01,920
that there are these messy
blobs, semi algebraic sets.

413
00:20:01,920 --> 00:20:04,385
The flat states, those
are discrete things.

414
00:20:04,385 --> 00:20:05,760
Because we have
fixed angles, you

415
00:20:05,760 --> 00:20:07,237
can flip or not flip every edge.

416
00:20:07,237 --> 00:20:08,820
So [INAUDIBLE] most
exponentially many

417
00:20:08,820 --> 00:20:10,800
of them, so finite.

418
00:20:10,800 --> 00:20:12,430
Are they all in one component?

419
00:20:12,430 --> 00:20:15,900
So I can get-- if I pick two
of my favorite flat states,

420
00:20:15,900 --> 00:20:17,590
there's a path between them?

421
00:20:17,590 --> 00:20:21,060
Or are some of them in
multiple components?

422
00:20:21,060 --> 00:20:23,285
So in this case, we call
it flat state disconnected.

423
00:20:23,285 --> 00:20:27,230

424
00:20:27,230 --> 00:20:32,030
And if they're all like this,
we call it flat state connected.

425
00:20:32,030 --> 00:20:34,920
And we'd just like to
know which chains, which

426
00:20:34,920 --> 00:20:38,550
fixed angle trees, whatever,
are flat state connected

427
00:20:38,550 --> 00:20:40,840
versus flat state disconnected.

428
00:20:40,840 --> 00:20:44,110
I would say, the
big open problem

429
00:20:44,110 --> 00:20:51,610
here is every fixed angle
chain, open chain flat state

430
00:20:51,610 --> 00:20:53,072
connected?

431
00:20:53,072 --> 00:20:54,410
That is still open.

432
00:20:54,410 --> 00:21:00,720
We have lots of results
in that direction.

433
00:21:00,720 --> 00:21:03,120
So the top four results
are about open chains,

434
00:21:03,120 --> 00:21:05,010
but they have an
extra constraint.

435
00:21:05,010 --> 00:21:08,230
For example, open chains that
have a monotone configuration,

436
00:21:08,230 --> 00:21:10,020
like the staircase.

437
00:21:10,020 --> 00:21:13,940
Those are flat state connected.

438
00:21:13,940 --> 00:21:16,710
In fact, whenever the
angles between the edges

439
00:21:16,710 --> 00:21:21,750
are either orthogonal
or obtuse, then they're

440
00:21:21,750 --> 00:21:23,530
flat state connected.

441
00:21:23,530 --> 00:21:25,900
When the angles are acute,
we're not really sure.

442
00:21:25,900 --> 00:21:29,260
If all the angles are equal
and acute, then we can do it.

443
00:21:29,260 --> 00:21:32,590
But if they're different
and acute, we don't know.

444
00:21:32,590 --> 00:21:35,810
Unless the edges
are all unit length

445
00:21:35,810 --> 00:21:38,710
and the angles are in this
funny range, then we can do it.

446
00:21:38,710 --> 00:21:41,520
So there's all these
special cases we can solve.

447
00:21:41,520 --> 00:21:45,270
The most relevant to proteins
is actually obtuse chains,

448
00:21:45,270 --> 00:21:47,970
so we've solved sort
of the main problem

449
00:21:47,970 --> 00:21:50,410
with this second result.

450
00:21:50,410 --> 00:21:52,180
But there's a natural
theoretical question

451
00:21:52,180 --> 00:21:55,470
here is, are all open
chains flat state connected

452
00:21:55,470 --> 00:21:57,090
or do we get disconnectivity?

453
00:21:57,090 --> 00:21:59,600
I will show you that-- I'll
show the orthogonal case

454
00:21:59,600 --> 00:22:01,192
in a little bit.

455
00:22:01,192 --> 00:22:03,400
We can do some stuff if you
have multiple chains that

456
00:22:03,400 --> 00:22:06,600
are attached to some
blob like a cell.

457
00:22:06,600 --> 00:22:12,990
Closed chains is a little
bit-- for disconnected,

458
00:22:12,990 --> 00:22:16,470
we don't have very interesting
examples, I would say.

459
00:22:16,470 --> 00:22:18,270
This is funny because
locked examples

460
00:22:18,270 --> 00:22:21,830
are easy to come by but flat
state disconnected examples are

461
00:22:21,830 --> 00:22:25,050
little trickier because
flat is so constrained.

462
00:22:25,050 --> 00:22:28,820
So let me just show
you these examples.

463
00:22:28,820 --> 00:22:33,240
This is what we call a partially
rigid fixed angle tree.

464
00:22:33,240 --> 00:22:36,010
So not only are
the angles fixed,

465
00:22:36,010 --> 00:22:40,620
but also the black
edges are not-- in fact,

466
00:22:40,620 --> 00:22:43,150
only the blue edges here
are allowed to spin.

467
00:22:43,150 --> 00:22:45,180
Everything else is held rigid.

468
00:22:45,180 --> 00:22:48,810
So these arms are somehow forced
to be in exactly that geometry.

469
00:22:48,810 --> 00:22:51,710
I can spin it
around this edge, so

470
00:22:51,710 --> 00:22:54,080
spin it up into 3D, for example.

471
00:22:54,080 --> 00:22:58,890
These are two different flat
states of the same linkage.

472
00:22:58,890 --> 00:23:01,660
The only difference between
these two-- I haven't rotated

473
00:23:01,660 --> 00:23:04,660
or anything-- is that I've
taken each of these arms

474
00:23:04,660 --> 00:23:08,240
and flipped it
around a blue axis.

475
00:23:08,240 --> 00:23:10,380
If I do all four of them,
I would get this picture.

476
00:23:10,380 --> 00:23:14,070
But the claim is, you cannot do
that without self intersection.

477
00:23:14,070 --> 00:23:16,670
The intuition is, when
there aren't very-- oh,

478
00:23:16,670 --> 00:23:19,652
one other thing that makes
it slightly more interesting.

479
00:23:19,652 --> 00:23:22,110
It's weird to say, well why
did you force some of the edges

480
00:23:22,110 --> 00:23:24,440
to be rigid and not others?

481
00:23:24,440 --> 00:23:27,650
One way to force that is
to use a general graph.

482
00:23:27,650 --> 00:23:29,850
If you add some extra
edges to sort of brace this

483
00:23:29,850 --> 00:23:32,250
and all these angles are
fixed, then this linkage

484
00:23:32,250 --> 00:23:34,840
will behave exactly
like that one.

485
00:23:34,840 --> 00:23:38,060
So that at least is
somewhat more natural,

486
00:23:38,060 --> 00:23:42,948
although what we really care
about are chains, maybe trees.

487
00:23:42,948 --> 00:23:44,322
But we don't know
whether there's

488
00:23:44,322 --> 00:23:47,950
a-- we also don't know
whether all fixed angle

489
00:23:47,950 --> 00:23:49,970
trees are flat state connected.

490
00:23:49,970 --> 00:23:53,600
These are the worst
examples we know.

491
00:23:53,600 --> 00:23:57,420
Let me give you an idea
of why it doesn't work.

492
00:23:57,420 --> 00:24:01,440
This is a little animation
of just a couple of moves

493
00:24:01,440 --> 00:24:06,190
attempted, and it's just
going cycle through that.

494
00:24:06,190 --> 00:24:12,410
And these are some static images
of the same kind of thing.

495
00:24:12,410 --> 00:24:14,980
So the intuition is the
following-- you have four arms.

496
00:24:14,980 --> 00:24:18,750
You have two sides to the
plane, there's up and down.

497
00:24:18,750 --> 00:24:22,500
The four arms and two
sides, at least two of them

498
00:24:22,500 --> 00:24:24,280
are going to have to
go to the same side.

499
00:24:24,280 --> 00:24:26,520
The best you can do is two
and two, or three and one.

500
00:24:26,520 --> 00:24:29,140
But in either case,
you have two sides

501
00:24:29,140 --> 00:24:32,200
go to the-- two arms
that go on the same side.

502
00:24:32,200 --> 00:24:34,900
Now, it could be,
like in this image,

503
00:24:34,900 --> 00:24:36,600
that they're opposite arms.

504
00:24:36,600 --> 00:24:40,760
So there's this arm here
and there's this arm here.

505
00:24:40,760 --> 00:24:43,760
So they're connected
by a 180 degree angle.

506
00:24:43,760 --> 00:24:45,960
And those guys,
when they fold up,

507
00:24:45,960 --> 00:24:49,660
actually these edges will
just hit each other dead on.

508
00:24:49,660 --> 00:24:52,895
So that's kind of obvious
from a geometric standpoint.

509
00:24:52,895 --> 00:24:55,020
Maybe you call it cheating
for them to hit dead on.

510
00:24:55,020 --> 00:24:57,478
You can twiddle the edge lengths
so that they will properly

511
00:24:57,478 --> 00:25:00,560
intersect without
dead on collision,

512
00:25:00,560 --> 00:25:03,540
without being
degenerate basically.

513
00:25:03,540 --> 00:25:05,124
The alternative
is that-- and this

514
00:25:05,124 --> 00:25:06,790
is a little harder
to see geometrically,

515
00:25:06,790 --> 00:25:12,950
and that's why we drew that
animation-- is that you have

516
00:25:12,950 --> 00:25:15,840
one arm and you have an adjacent
arm connected by a 90 degree

517
00:25:15,840 --> 00:25:16,910
angle.

518
00:25:16,910 --> 00:25:19,060
Now here, there's clearly
some collision going on.

519
00:25:19,060 --> 00:25:21,390
And if you happen to fold
it up 90 degrees like that

520
00:25:21,390 --> 00:25:23,670
and then fold the other guy,
obviously you get stuck.

521
00:25:23,670 --> 00:25:25,590
But maybe you fold it a
little bit and the other guy

522
00:25:25,590 --> 00:25:27,290
goes a little bit
more and there could

523
00:25:27,290 --> 00:25:30,150
be some dance between those two
degrees of freedom, those two

524
00:25:30,150 --> 00:25:33,910
arms, that somehow gets
them both to pass over

525
00:25:33,910 --> 00:25:34,790
to the other side.

526
00:25:34,790 --> 00:25:35,956
It's obviously not possible.

527
00:25:35,956 --> 00:25:37,330
How do you prove it?

528
00:25:37,330 --> 00:25:41,400
Well, you could prove it with
topology-- knot theory or link

529
00:25:41,400 --> 00:25:42,830
theory.

530
00:25:42,830 --> 00:25:44,890
So it's a very cute proof.

531
00:25:44,890 --> 00:25:48,150
You start with-- so
here's the full example,

532
00:25:48,150 --> 00:25:50,510
but I've highlighted
the two arms in red

533
00:25:50,510 --> 00:25:52,490
that are going to move.

534
00:25:52,490 --> 00:25:55,160
And I imagine
connecting the endpoints

535
00:25:55,160 --> 00:25:59,220
of each arm with these
little blue ropes

536
00:25:59,220 --> 00:26:01,370
underneath the plane.

537
00:26:01,370 --> 00:26:02,870
They're both going
on the same side.

538
00:26:02,870 --> 00:26:04,786
Let's say they somehow
pass through each other

539
00:26:04,786 --> 00:26:05,810
on the top side.

540
00:26:05,810 --> 00:26:07,720
Then I'm free to connect
stuff on the bottom,

541
00:26:07,720 --> 00:26:09,900
and I shouldn't
collide with that.

542
00:26:09,900 --> 00:26:12,430
So if somehow,
both of these guys

543
00:26:12,430 --> 00:26:17,850
flip over-- so arm on
the left, A3 flips over.

544
00:26:17,850 --> 00:26:20,580
A3 stays where it
is but now the arm

545
00:26:20,580 --> 00:26:24,080
is on the top, the north side
instead of the south side.

546
00:26:24,080 --> 00:26:29,990
And the other guy, from B
to B3, used to go like this

547
00:26:29,990 --> 00:26:31,300
and now it goes like this.

548
00:26:31,300 --> 00:26:34,060
If that happens somehow,
then these ropes

549
00:26:34,060 --> 00:26:35,950
could remain intact
during that whole motion.

550
00:26:35,950 --> 00:26:40,684
On the top, you have two closed
loops that are not interlocked.

551
00:26:40,684 --> 00:26:42,350
On the bottom, you
have two closed loops

552
00:26:42,350 --> 00:26:43,247
that are interlocked.

553
00:26:43,247 --> 00:26:45,080
So there's no way to
get from there to there

554
00:26:45,080 --> 00:26:46,550
without colliding somewhere.

555
00:26:46,550 --> 00:26:48,470
The blue stuff didn't
move, so the red stuff

556
00:26:48,470 --> 00:26:50,110
must have collided.

557
00:26:50,110 --> 00:26:52,270
So even just topologically,
you are screwed.

558
00:26:52,270 --> 00:26:55,810

559
00:26:55,810 --> 00:26:58,630
That is their only
negative example.

560
00:26:58,630 --> 00:27:01,920
Lots of interesting
open questions here.

561
00:27:01,920 --> 00:27:06,190
On the positive
side, let me show you

562
00:27:06,190 --> 00:27:08,710
for orthogonal chains--
and the same algorithm

563
00:27:08,710 --> 00:27:10,800
works for obtuse
chains, all the angles

564
00:27:10,800 --> 00:27:14,810
are obtuse-- how they
are flat state connected.

565
00:27:14,810 --> 00:27:17,410
So in order to show it's
flat state connected,

566
00:27:17,410 --> 00:27:19,760
I want to think
about two flat states

567
00:27:19,760 --> 00:27:22,000
and show that I
can fold from one

568
00:27:22,000 --> 00:27:27,120
to the other via some
intermediate 3D stuff.

569
00:27:27,120 --> 00:27:30,150
Let's start with one
of the flat states.

570
00:27:30,150 --> 00:27:31,760
So it's orthogonal.

571
00:27:31,760 --> 00:27:34,459
So in two dimensions,
all the edges

572
00:27:34,459 --> 00:27:35,750
will be horizontal or vertical.

573
00:27:35,750 --> 00:27:39,429
In 3D, they can kind of be in
many, many different angles,

574
00:27:39,429 --> 00:27:40,845
many different
dihedral triangles.

575
00:27:40,845 --> 00:27:43,000
In 2D, it's pretty simple.

576
00:27:43,000 --> 00:27:45,506
And all I need to do is
sort of pick up that chain,

577
00:27:45,506 --> 00:27:47,630
and I'm going to try to
pick it up into a staircase

578
00:27:47,630 --> 00:27:49,250
because there's
only one staircase.

579
00:27:49,250 --> 00:27:52,190
If I can make it a
staircase, I make

580
00:27:52,190 --> 00:27:54,510
flat configuration A a
staircase, flat configuration B

581
00:27:54,510 --> 00:27:57,730
a staircase, and just
FedEx in the middle.

582
00:27:57,730 --> 00:27:59,800
Once they're both
staircases, I play one motion

583
00:27:59,800 --> 00:28:02,779
and the other one backwards,
get from anywhere to anywhere.

584
00:28:02,779 --> 00:28:03,820
So here's all you do you.

585
00:28:03,820 --> 00:28:05,670
You take the first
edge and you just

586
00:28:05,670 --> 00:28:12,626
rotate it up to the red line A.
And then you take the next edge

587
00:28:12,626 --> 00:28:14,000
and you take both
of those edges,

588
00:28:14,000 --> 00:28:16,430
and you just rotate
them like this,

589
00:28:16,430 --> 00:28:20,630
so you get that little
2-step staircase.

590
00:28:20,630 --> 00:28:22,450
Now I'd really like
to pick up this edge,

591
00:28:22,450 --> 00:28:24,250
but I want to
first get these two

592
00:28:24,250 --> 00:28:26,440
edges in a plane with that edge.

593
00:28:26,440 --> 00:28:32,240
So I rotate this flag over to
the left, I get those two guys.

594
00:28:32,240 --> 00:28:35,250
And now they're in a plane with
this, and I just lift that up.

595
00:28:35,250 --> 00:28:37,700
Then I'm going to
flip, then rotate up.

596
00:28:37,700 --> 00:28:40,100
Flip, rotate, flip, rotate.

597
00:28:40,100 --> 00:28:42,310
Here's some more examples.

598
00:28:42,310 --> 00:28:47,650
So if at this point, I have
this staircase-- sorry,

599
00:28:47,650 --> 00:28:52,150
I guess originally I have
from V3 to D up there.

600
00:28:52,150 --> 00:28:55,810
it's not in plane with this guy,
so I just rotate it like that.

601
00:28:55,810 --> 00:28:58,030
I'm spinning around this edge.

602
00:28:58,030 --> 00:29:01,290
So now I have from
B3 to #, and then I

603
00:29:01,290 --> 00:29:04,010
rotate it up along
that green arc.

604
00:29:04,010 --> 00:29:07,285
And I get a bigger
staircase above the chain

605
00:29:07,285 --> 00:29:08,910
and because everything's
staying above,

606
00:29:08,910 --> 00:29:10,450
it will never
penetrate the plane

607
00:29:10,450 --> 00:29:12,190
and will never hit anybody else.

608
00:29:12,190 --> 00:29:14,240
And I'm building a
staircase by design.

609
00:29:14,240 --> 00:29:16,050
I always rotate this--
there's actually

610
00:29:16,050 --> 00:29:18,000
two ways I could be in
plane-- but I always

611
00:29:18,000 --> 00:29:19,900
rotate it so that when
I pick an edge up,

612
00:29:19,900 --> 00:29:21,780
it'll be in a staircase.

613
00:29:21,780 --> 00:29:23,440
So this is actually really easy.

614
00:29:23,440 --> 00:29:26,810
And slight generalization
is to obtuse chains,

615
00:29:26,810 --> 00:29:33,836
then instead of making a
staircase, we make a monotone.

616
00:29:33,836 --> 00:29:34,955
Let me get this right.

617
00:29:34,955 --> 00:29:38,080

618
00:29:38,080 --> 00:29:39,940
Yeah, sum z monotone state.

619
00:29:39,940 --> 00:29:43,050
So it goes monotone and z,
out of the plane, that's

620
00:29:43,050 --> 00:29:44,900
enough to avoid
collision, and you

621
00:29:44,900 --> 00:29:46,600
get a canonical configuration.

622
00:29:46,600 --> 00:29:51,120
Also, if you have acute angles
but all the angles are equal,

623
00:29:51,120 --> 00:29:53,740
then there's a
natural conical state,

624
00:29:53,740 --> 00:29:55,820
which is just like a
compressed staircase.

625
00:29:55,820 --> 00:29:57,330
And that will work here, too.

626
00:29:57,330 --> 00:29:58,402
That takes more effort.

627
00:29:58,402 --> 00:29:59,610
That was in a separate paper.

628
00:29:59,610 --> 00:30:02,500

629
00:30:02,500 --> 00:30:05,640
But big open question is,
chains with arbitrary angles.

630
00:30:05,640 --> 00:30:07,120
We have no idea.

631
00:30:07,120 --> 00:30:10,676
It is very hard to do
an operation like this.

632
00:30:10,676 --> 00:30:12,050
Wow, we are burning
through this.

633
00:30:12,050 --> 00:30:12,640
This is fun.

634
00:30:12,640 --> 00:30:15,170

635
00:30:15,170 --> 00:30:22,375
So the next topic is
about locked chains.

636
00:30:22,375 --> 00:30:24,360
Now as I said, you can
take a knitting needles

637
00:30:24,360 --> 00:30:28,080
example, which has five edges.

638
00:30:28,080 --> 00:30:33,511

639
00:30:33,511 --> 00:30:35,010
And that will still
be locked if you

640
00:30:35,010 --> 00:30:37,340
force the angles to be
fixed because it was locked

641
00:30:37,340 --> 00:30:39,410
without the angles being fixed.

642
00:30:39,410 --> 00:30:44,040
Now, it required a length
ratio of 3:1, I think.

643
00:30:44,040 --> 00:30:46,480
This edge had to be longer
than the sum of those three.

644
00:30:46,480 --> 00:30:49,940

645
00:30:49,940 --> 00:30:54,730
So let me put down
some open problems.

646
00:30:54,730 --> 00:30:59,680
So you may recall in the
case of universal chains--

647
00:30:59,680 --> 00:31:12,160
universal joints, I should
say-- the big open question was,

648
00:31:12,160 --> 00:31:15,750
can you lock a
universal joint 3D chain

649
00:31:15,750 --> 00:31:19,360
with unit edge lengths?

650
00:31:19,360 --> 00:31:24,400
So, equilateral-- every
edge is the same length.

651
00:31:24,400 --> 00:31:26,670
Is there a locked chain
like the knitting needles

652
00:31:26,670 --> 00:31:28,295
when all the edge
lengths are the same.

653
00:31:28,295 --> 00:31:30,920
And one of the motivations
for that is in proteins,

654
00:31:30,920 --> 00:31:34,890
the edge lengths are all
within like 50% of each other.

655
00:31:34,890 --> 00:31:38,400
So it's pretty
natural, of course.

656
00:31:38,400 --> 00:31:43,816
We don't have universal
joints with proteins.

657
00:31:43,816 --> 00:31:44,940
We have fixed angle joints.

658
00:31:44,940 --> 00:31:48,060

659
00:31:48,060 --> 00:31:52,170
So the big open problem
for fixed angle joints--

660
00:31:52,170 --> 00:32:05,160
I guess we'll do this in parts--
is there a locked 3D fixed

661
00:32:05,160 --> 00:32:24,100
angle chain that's equilateral?

662
00:32:24,100 --> 00:32:25,700
I'm going to add
some conditions here.

663
00:32:25,700 --> 00:32:30,410

664
00:32:30,410 --> 00:32:32,060
So that's the first
natural question.

665
00:32:32,060 --> 00:32:34,280
Knitting needles
doesn't suffice.

666
00:32:34,280 --> 00:32:36,400
We need a 3:1 length
ratio, as far as we know.

667
00:32:36,400 --> 00:32:42,600

668
00:32:42,600 --> 00:32:44,680
Turns out that question's
not very interesting.

669
00:32:44,680 --> 00:32:48,100
I need to do slightly
nonlinear editing here.

670
00:32:48,100 --> 00:32:50,490
So you take your
knitting needles example,

671
00:32:50,490 --> 00:32:53,420
and you just subdivide the edges
into lots of little tiny bars.

672
00:32:53,420 --> 00:32:55,000
It doesn't have to
be this extreme.

673
00:32:55,000 --> 00:32:57,160
You could not subdivide
these edges at all,

674
00:32:57,160 --> 00:32:58,850
and make these
guys subdivide them

675
00:32:58,850 --> 00:33:00,850
into like three or four parts.

676
00:33:00,850 --> 00:33:03,810
Because the angles
are fixed, these guys

677
00:33:03,810 --> 00:33:05,860
act as a single [INAUDIBLE].

678
00:33:05,860 --> 00:33:07,510
There's really no difference.

679
00:33:07,510 --> 00:33:09,420
Maybe you make a
slight curve there

680
00:33:09,420 --> 00:33:13,600
and then they can bend a little
bit, but really not much.

681
00:33:13,600 --> 00:33:16,570
So if you just say, oh, I
want it to be unit length.

682
00:33:16,570 --> 00:33:20,220
I don't constrain what the
angles are but I fix them,

683
00:33:20,220 --> 00:33:23,070
then it's trivial to come
up with locked examples.

684
00:33:23,070 --> 00:33:26,500
So that's not very interesting.

685
00:33:26,500 --> 00:33:28,880
What if I make it not
only equilateral--

686
00:33:28,880 --> 00:33:31,240
the lengths are the same--
if I make it equiangular.

687
00:33:31,240 --> 00:33:37,350

688
00:33:37,350 --> 00:33:41,250
Because, again, in proteins,
all the angles are similar.

689
00:33:41,250 --> 00:33:44,650
They're around 110, 108,
something like that.

690
00:33:44,650 --> 00:33:48,250
They're all pretty close,
I think within 10 to 20%

691
00:33:48,250 --> 00:33:49,950
of each other.

692
00:33:49,950 --> 00:33:52,080
Well, there's also
a locked example.

693
00:33:52,080 --> 00:33:55,620
And just to show you how
research was done back

694
00:33:55,620 --> 00:34:00,290
at the turn of the century,
this is pre-web 2.0, pre-Ajax

695
00:34:00,290 --> 00:34:01,880
and all that fancy stuff.

696
00:34:01,880 --> 00:34:04,300
We used Ascii Art.

697
00:34:04,300 --> 00:34:06,550
Email was the tool of choice.

698
00:34:06,550 --> 00:34:12,280
I know it's hard to imagine
a time-- 2002, so long ago.

699
00:34:12,280 --> 00:34:13,610
And I tracked this down.

700
00:34:13,610 --> 00:34:16,389
This is the original
claim it looks--

701
00:34:16,389 --> 00:34:18,130
we call this the
crossed legs example

702
00:34:18,130 --> 00:34:20,800
because it's like two legs
crossed around each other.

703
00:34:20,800 --> 00:34:24,260
And this is the first time
we thought, oh, maybe it

704
00:34:24,260 --> 00:34:25,710
could be done, unit length.

705
00:34:25,710 --> 00:34:28,800
This is Stefan Langerman.

706
00:34:28,800 --> 00:34:31,900
And here, for the
first time ever--

707
00:34:31,900 --> 00:34:34,770
this is not the first model,
but this is the first photograph

708
00:34:34,770 --> 00:34:38,920
of any model I'm aware of-- this
is the crossed legs example.

709
00:34:38,920 --> 00:34:41,090
This is made with a
construction toy that

710
00:34:41,090 --> 00:34:44,360
used to be sold around here
but is no longer in production.

711
00:34:44,360 --> 00:34:45,790
So they're pretty hard to get.

712
00:34:45,790 --> 00:34:49,590
It's straws-- nicely colored
straws-- and the cool part

713
00:34:49,590 --> 00:34:52,330
are these connectors.

714
00:34:52,330 --> 00:34:54,739
So the connectors force
particular angles.

715
00:34:54,739 --> 00:34:57,300
In this case, every
angle is 45 degrees.

716
00:34:57,300 --> 00:34:59,760
So this is equiangular
and equilateral

717
00:34:59,760 --> 00:35:02,060
because all the straws, I'm
told, are the same length.

718
00:35:02,060 --> 00:35:03,910
That's how they're sold.

719
00:35:03,910 --> 00:35:07,350
And you can do edge spins.

720
00:35:07,350 --> 00:35:11,140
Whoops, that's called cheating.

721
00:35:11,140 --> 00:35:14,900
It's not totally obvious
that this is locked.

722
00:35:14,900 --> 00:35:18,180
The problem with the model
is that the edges can bend.

723
00:35:18,180 --> 00:35:25,560
But if you treat it properly
and only spin around the edges,

724
00:35:25,560 --> 00:35:28,340
then you're stuck.

725
00:35:28,340 --> 00:35:31,760
Now, there is one
thing you can do.

726
00:35:31,760 --> 00:35:39,100
See if I-- yeah, like this.

727
00:35:39,100 --> 00:35:40,640
So here, I'm almost in a plane.

728
00:35:40,640 --> 00:35:44,320
I've got the purple edge
right against the pink one.

729
00:35:44,320 --> 00:35:45,570
Easier to see from that angle?

730
00:35:45,570 --> 00:35:46,870
I don't know.

731
00:35:46,870 --> 00:35:50,730
So here, this guy can
come out and this guy

732
00:35:50,730 --> 00:35:53,662
can barely go on the edge.

733
00:35:53,662 --> 00:35:55,870
So actually, this doesn't
quite work for equilateral.

734
00:35:55,870 --> 00:35:57,220
It works for one plus epsilon.

735
00:35:57,220 --> 00:36:00,920
That's why I added these
little nubs at the end.

736
00:36:00,920 --> 00:36:03,590
So if they're all
exactly equal length

737
00:36:03,590 --> 00:36:07,430
and you allow just
abrasion of the endpoint,

738
00:36:07,430 --> 00:36:09,050
then this could go
around like that

739
00:36:09,050 --> 00:36:11,450
and then you'd be unlocked.

740
00:36:11,450 --> 00:36:13,590
But if you just add
slightly-- either

741
00:36:13,590 --> 00:36:15,810
you change the angles
to be not quite equal,

742
00:36:15,810 --> 00:36:18,270
so make this a little smaller,
or you make the lengths

743
00:36:18,270 --> 00:36:20,659
a little bit longer
at the ends-- then

744
00:36:20,659 --> 00:36:21,700
the claim is it's locked.

745
00:36:21,700 --> 00:36:23,616
We don't actually have
a formal proof of this.

746
00:36:23,616 --> 00:36:26,250
We're just remembering, hey, we
should probably write this up.

747
00:36:26,250 --> 00:36:27,708
I was talking to
Stefan last night.

748
00:36:27,708 --> 00:36:31,560

749
00:36:31,560 --> 00:36:33,760
So someday we'll prove
that this is locked.

750
00:36:33,760 --> 00:36:35,260
But it certainly looks like it.

751
00:36:35,260 --> 00:36:38,040
So this isn't open yet.

752
00:36:38,040 --> 00:36:40,680
I mean, modulo the
details of that proof.

753
00:36:40,680 --> 00:36:43,200
Equilateral and
equiangular seems

754
00:36:43,200 --> 00:36:45,870
easy to lock with
fixed angle chains.

755
00:36:45,870 --> 00:36:50,770
In fact, even easier, this
example only has four edges.

756
00:36:50,770 --> 00:36:53,560
So even less than
the knitting needles.

757
00:36:53,560 --> 00:37:00,910
Fixed angles make for
complicated motions, I guess.

758
00:37:00,910 --> 00:37:02,750
Make it hard to unlock things.

759
00:37:02,750 --> 00:37:04,640
So I need to add
one more constraint,

760
00:37:04,640 --> 00:37:08,280
and the constraint is obtuse.

761
00:37:08,280 --> 00:37:11,150
So again, all of
these properties

762
00:37:11,150 --> 00:37:14,670
are enjoyed by proteins.

763
00:37:14,670 --> 00:37:17,020
Protein backbones have
all these properties.

764
00:37:17,020 --> 00:37:19,930
Even if you looked
at fixed angle trees,

765
00:37:19,930 --> 00:37:22,110
is there something like
this that's locked?

766
00:37:22,110 --> 00:37:24,570
And now, we don't know.

767
00:37:24,570 --> 00:37:26,290
And this seems quite tricky.

768
00:37:26,290 --> 00:37:28,819
I guess the intuition is that
obtuse-- and usually we think

769
00:37:28,819 --> 00:37:30,485
about orthogonal,
just cause it's easier

770
00:37:30,485 --> 00:37:31,980
to draw the
pictures, but reality

771
00:37:31,980 --> 00:37:36,510
is more like 108 degrees--
the conjecture is

772
00:37:36,510 --> 00:37:40,562
obtuse fixed angle chains behave
kind of like universal joints.

773
00:37:40,562 --> 00:37:42,020
And with universal
joints, we don't

774
00:37:42,020 --> 00:37:44,870
know whether
equilateral is enough.

775
00:37:44,870 --> 00:37:48,526
So it's tricky.

776
00:37:48,526 --> 00:37:50,724
Yeah, question.

777
00:37:50,724 --> 00:37:52,140
AUDIENCE: In the
previous example,

778
00:37:52,140 --> 00:37:57,197
you showed the ribbon thing--

779
00:37:57,197 --> 00:37:58,280
PROFESSOR: The subdivided.

780
00:37:58,280 --> 00:38:00,738
AUDIENCE: Subdivided into a
bunch of little interconnecting

781
00:38:00,738 --> 00:38:01,598
pieces.

782
00:38:01,598 --> 00:38:06,500
What if you, instead,
made your ribbon lengths

783
00:38:06,500 --> 00:38:12,865
basically a bunch of little
unit obtuse angle connectors,

784
00:38:12,865 --> 00:38:16,350
and then when you hit
the big terms it's just

785
00:38:16,350 --> 00:38:18,040
obtuse, obtuse, obtuse, obtuse.

786
00:38:18,040 --> 00:38:20,130
PROFESSOR: Yeah, you
can make this example

787
00:38:20,130 --> 00:38:21,130
be entirely obtuse.

788
00:38:21,130 --> 00:38:22,540
You can make every angle obtuse.

789
00:38:22,540 --> 00:38:24,250
Here, you could
arc a little bit.

790
00:38:24,250 --> 00:38:27,050
Here, you could arc some
more, but not too sharp.

791
00:38:27,050 --> 00:38:28,700
And because here,
we actually know

792
00:38:28,700 --> 00:38:30,380
that this part can
be made a string.

793
00:38:30,380 --> 00:38:32,096
We don't really care
what it looks like.

794
00:38:32,096 --> 00:38:33,470
So you can make
it fairly obtuse.

795
00:38:33,470 --> 00:38:35,500
It's just that these guys
should not bend much.

796
00:38:35,500 --> 00:38:39,060
They have to be long no
matter how you fold them.

797
00:38:39,060 --> 00:38:45,390
So if you want equilateral
and obtuse, that's also easy.

798
00:38:45,390 --> 00:38:48,160
But to make all the
angles actually be equal,

799
00:38:48,160 --> 00:38:50,760
as far as we know you cannot
take that knitting needles

800
00:38:50,760 --> 00:38:51,702
subdivided.

801
00:38:51,702 --> 00:38:53,910
Make all the lengths equal,
and all the angles equal,

802
00:38:53,910 --> 00:38:55,870
and make them obtuse.

803
00:38:55,870 --> 00:38:56,800
That's open.

804
00:38:56,800 --> 00:38:58,540
But any two out of
the three, it's easy.

805
00:38:58,540 --> 00:39:02,150

806
00:39:02,150 --> 00:39:04,590
Of course, in reality they're
not quite equilateral.

807
00:39:04,590 --> 00:39:06,190
They're not quite equiangular.

808
00:39:06,190 --> 00:39:07,440
But it's still open for those.

809
00:39:07,440 --> 00:39:09,400
If you have like a small
range for the lengths

810
00:39:09,400 --> 00:39:11,670
and a small range for
the angles, this is open.

811
00:39:11,670 --> 00:39:15,100
We pose it this way because
it's the cleanest geometrically.

812
00:39:15,100 --> 00:39:17,060
But the real question
you care about

813
00:39:17,060 --> 00:39:21,250
is when these are
fuzzy constraints.

814
00:39:21,250 --> 00:39:26,290
Obtuse is real, but
these guys are fuzzier.

815
00:39:26,290 --> 00:39:32,480
So if you think about proteins,
which fold very well in nature,

816
00:39:32,480 --> 00:39:35,690
there are a couple of
reasons they might fold well.

817
00:39:35,690 --> 00:39:38,650
We know, as far as
fixed angle chains go,

818
00:39:38,650 --> 00:39:41,150
it's actually quite easy
to find locked examples.

819
00:39:41,150 --> 00:39:44,589
And, this is somewhat
intuitive but bear with me,

820
00:39:44,589 --> 00:39:47,130
because they are locked examples
in this configuration space,

821
00:39:47,130 --> 00:39:51,360
we believe these configuration
spaces are really ugly nasty.

822
00:39:51,360 --> 00:39:54,930
So it would be very hard--
even if you know, oh I only

823
00:39:54,930 --> 00:39:58,060
need to fold something
in my component--

824
00:39:58,060 --> 00:39:59,620
if these guys are
highly disconnected

825
00:39:59,620 --> 00:40:01,540
and flat states are
all over the place,

826
00:40:01,540 --> 00:40:04,500
it's probably even within
this connected component,

827
00:40:04,500 --> 00:40:06,240
it looks really ugly.

828
00:40:06,240 --> 00:40:10,150
And so it's very hard to find a
path from one state to another.

829
00:40:10,150 --> 00:40:12,190
Probably pieced based
complete, although we

830
00:40:12,190 --> 00:40:15,340
don't know that for sure.

831
00:40:15,340 --> 00:40:16,440
But that's the intuition.

832
00:40:16,440 --> 00:40:18,884
Locked equals messy.

833
00:40:18,884 --> 00:40:20,550
When there are no
locked configurations,

834
00:40:20,550 --> 00:40:23,300
like carpenter's rules, we
get really nice algorithms.

835
00:40:23,300 --> 00:40:27,120
It's super easy to get from
state A to state B. Now,

836
00:40:27,120 --> 00:40:29,290
if you're nature or
you're designing nature,

837
00:40:29,290 --> 00:40:33,160
let's say, or you're building
your own virtual world, Second

838
00:40:33,160 --> 00:40:35,909
Life, and you want
to design proteins,

839
00:40:35,909 --> 00:40:37,700
you would like to design
them in such a way

840
00:40:37,700 --> 00:40:40,240
that they fold easily because
it happens all the time.

841
00:40:40,240 --> 00:40:44,000
Every thing that is being acted
on by our body, every living

842
00:40:44,000 --> 00:40:46,410
thing that we know has
tons of little proteins

843
00:40:46,410 --> 00:40:47,620
that are doing all the work.

844
00:40:47,620 --> 00:40:50,840
They are folded into their
shape and they do something.

845
00:40:50,840 --> 00:40:54,070
That's proteins plus
RNA, but mostly proteins.

846
00:40:54,070 --> 00:40:57,980
So to understand life, we
should understand proteins.

847
00:40:57,980 --> 00:41:01,500
Now, how to proteins
fold so well when we know

848
00:41:01,500 --> 00:41:03,980
there are all these
locked configurations?

849
00:41:03,980 --> 00:41:06,510
One possible answer is that
proteins have extra structure,

850
00:41:06,510 --> 00:41:08,740
namely these three
things, which somehow

851
00:41:08,740 --> 00:41:10,620
make it very easy to
algorithmically go

852
00:41:10,620 --> 00:41:15,870
from A to B. Notice I'm not
assuming anything about how

853
00:41:15,870 --> 00:41:20,950
proteins fold in terms of what
is the mechanism that drives

854
00:41:20,950 --> 00:41:25,260
them because we don't really
understand those mechanisms.

855
00:41:25,260 --> 00:41:28,230
There's hydrophobia, which we
don't really know how it works.

856
00:41:28,230 --> 00:41:34,552
So all these little forces
that we don't fully understand.

857
00:41:34,552 --> 00:41:36,260
We understand lots of
parts of the story,

858
00:41:36,260 --> 00:41:38,596
but not the whole story.

859
00:41:38,596 --> 00:41:40,720
And what's convenient about
these kinds of problems

860
00:41:40,720 --> 00:41:42,219
is you don't need
to assume anything

861
00:41:42,219 --> 00:41:44,246
about how it actually happens.

862
00:41:44,246 --> 00:41:46,120
All we're assuming is
the mechanical behavior

863
00:41:46,120 --> 00:41:49,640
of the proteins, and how
they could possibly fold.

864
00:41:49,640 --> 00:41:53,280
And the idea is if there's
locked configurations, that's

865
00:41:53,280 --> 00:41:56,030
probably the wrong model
because then everything's messy.

866
00:41:56,030 --> 00:41:57,920
Now there's also
evolution coming into play

867
00:41:57,920 --> 00:41:59,628
and maybe some proteins
are easy to fold,

868
00:41:59,628 --> 00:42:01,361
some proteins are hard to fold.

869
00:42:01,361 --> 00:42:02,860
That's an interesting
question which

870
00:42:02,860 --> 00:42:05,040
should be experimented with.

871
00:42:05,040 --> 00:42:08,282
But let's hope that
there's a model.

872
00:42:08,282 --> 00:42:09,490
Things are mutating randomly.

873
00:42:09,490 --> 00:42:12,070
You really like
everything to fold nicely.

874
00:42:12,070 --> 00:42:14,000
Maybe it's because
you have all three

875
00:42:14,000 --> 00:42:15,920
of these properties,
approximately,

876
00:42:15,920 --> 00:42:16,700
in real proteins.

877
00:42:16,700 --> 00:42:19,450

878
00:42:19,450 --> 00:42:23,770
So general idea is that nature
has some extra constraints that

879
00:42:23,770 --> 00:42:26,680
make protein folding easy.

880
00:42:26,680 --> 00:42:29,010
Just have to figure
out what they are

881
00:42:29,010 --> 00:42:30,290
and why it makes them easy.

882
00:42:30,290 --> 00:42:31,690
Unfortunately, this is
still an open problem.

883
00:42:31,690 --> 00:42:34,190
If this had an algorithm, that
would be a natural candidate

884
00:42:34,190 --> 00:42:36,900
for what nature's doing
using its mechanical--

885
00:42:36,900 --> 00:42:41,920
or using it's energies
and forces, and so on.

886
00:42:41,920 --> 00:42:43,950
This would be a rather
unsatisfactory ending

887
00:42:43,950 --> 00:42:49,070
if this was-- if the
climax was an open problem.

888
00:42:49,070 --> 00:42:50,140
We have a theorem too.

889
00:42:50,140 --> 00:42:52,650

890
00:42:52,650 --> 00:42:55,115
And this is what I'll
cover in most detail.

891
00:42:55,115 --> 00:42:59,850

892
00:42:59,850 --> 00:43:04,120
And it's a paper called
producible protein chains.

893
00:43:04,120 --> 00:43:09,090
Protein chains just means fixed
angle chains, open chains.

894
00:43:09,090 --> 00:43:13,180
And the idea is well, yeah,
there are these constraints

895
00:43:13,180 --> 00:43:14,660
or there are these
extra features.

896
00:43:14,660 --> 00:43:16,076
We don't know how
to exploit them,

897
00:43:16,076 --> 00:43:17,800
so let's not even
worry about them.

898
00:43:17,800 --> 00:43:19,910
Suppose they don't even exist.

899
00:43:19,910 --> 00:43:23,025
Maybe I'm going to assume
obtuse, but none of the others.

900
00:43:23,025 --> 00:43:25,720

901
00:43:25,720 --> 00:43:29,530
There's another
constraint in how proteins

902
00:43:29,530 --> 00:43:31,995
fold, or really how
proteins are created.

903
00:43:31,995 --> 00:43:35,150

904
00:43:35,150 --> 00:43:38,490
They're created by a machine,
a molecular machine made up

905
00:43:38,490 --> 00:43:43,132
of a whole bunch of proteins
and RNA, called the ribosome.

906
00:43:43,132 --> 00:43:44,480
You may have heard of.

907
00:43:44,480 --> 00:43:48,020
It translates messenger
RNA into proteins.

908
00:43:48,020 --> 00:43:50,800
So there's some mRNA
around here, maybe.

909
00:43:50,800 --> 00:43:52,800
Don't know exactly how
this machine works.

910
00:43:52,800 --> 00:43:55,620
But there are actually very
accurate three dimensional

911
00:43:55,620 --> 00:43:57,870
reconstructions of the ribosome.

912
00:43:57,870 --> 00:43:59,470
With no copyright
free images, you're

913
00:43:59,470 --> 00:44:01,594
going to have to-- there's
a link on the slide that

914
00:44:01,594 --> 00:44:06,740
goes to the cool and 3D
models of the ribosome,

915
00:44:06,740 --> 00:44:07,820
with a slice away.

916
00:44:07,820 --> 00:44:10,510
So you can see there's
a tunnel down here,

917
00:44:10,510 --> 00:44:13,240
and the protein get
sort of created here.

918
00:44:13,240 --> 00:44:15,190
The background
gets created here.

919
00:44:15,190 --> 00:44:17,050
And it starts going
through this tunnel.

920
00:44:17,050 --> 00:44:18,620
There's a bend in
the tunnel around

921
00:44:18,620 --> 00:44:22,840
here, where it's conjectured
and an amino acid gets attached.

922
00:44:22,840 --> 00:44:25,410
And then it goes out the
tunnel and the protein

923
00:44:25,410 --> 00:44:27,960
starts spewing out here
and presumably folding

924
00:44:27,960 --> 00:44:28,680
at the same time.

925
00:44:28,680 --> 00:44:31,270
We don't really know.

926
00:44:31,270 --> 00:44:33,520
So this is how
proteins are created.

927
00:44:33,520 --> 00:44:36,120

928
00:44:36,120 --> 00:44:38,530
The birds and bees,
I guess, of proteins.

929
00:44:38,530 --> 00:44:42,170
So what's interesting
about this is

930
00:44:42,170 --> 00:44:45,290
it's not like a protein
exists and then folds,

931
00:44:45,290 --> 00:44:47,620
which is how a lot
of people might

932
00:44:47,620 --> 00:44:49,999
think about it at first glance.

933
00:44:49,999 --> 00:44:52,040
That's the natural way to
model protein folding--

934
00:44:52,040 --> 00:44:54,770
start with a protein, say,
and just zigzag configuration.

935
00:44:54,770 --> 00:44:57,920
If it's obtuse, there's a nice
zigzag monotone configuration.

936
00:44:57,920 --> 00:45:00,250
Then you see what is
the best configuration

937
00:45:00,250 --> 00:45:02,080
I could fold into, for
some notion of best.

938
00:45:02,080 --> 00:45:05,000

939
00:45:05,000 --> 00:45:07,000
And that's sort of what
this configuration space

940
00:45:07,000 --> 00:45:07,950
picture is about.

941
00:45:07,950 --> 00:45:10,450
It's if I already
have a protein, what

942
00:45:10,450 --> 00:45:12,500
configurations can
I reach by motions?

943
00:45:12,500 --> 00:45:13,500
And that is interesting.

944
00:45:13,500 --> 00:45:15,041
That's important
because you're still

945
00:45:15,041 --> 00:45:16,550
going to have to
reach by a motion.

946
00:45:16,550 --> 00:45:19,710
But, it's actually
more flexible than that

947
00:45:19,710 --> 00:45:23,220
because the protein could
just be partially built.

948
00:45:23,220 --> 00:45:26,220
The rest of the protein
hasn't been built.

949
00:45:26,220 --> 00:45:28,382
And it could start
folding already.

950
00:45:28,382 --> 00:45:29,840
It might be easier
to fold when you

951
00:45:29,840 --> 00:45:32,960
don't have the obstacles
of your existing protein.

952
00:45:32,960 --> 00:45:38,550
So that's both a worry, but
it's also a convenient structure

953
00:45:38,550 --> 00:45:42,660
because this ribosome
is a giant obstacle.

954
00:45:42,660 --> 00:45:45,050
Bigger than most proteins.

955
00:45:45,050 --> 00:45:47,610
If your protein's really long,
maybe it could go over here.

956
00:45:47,610 --> 00:45:51,800
But most the time, it's going to
stay on one side of this plane

957
00:45:51,800 --> 00:45:54,720
because locally, this thing
is basically flat, if you look

958
00:45:54,720 --> 00:45:58,830
at the real 3D pictures,
not the schematic.

959
00:45:58,830 --> 00:46:01,520
Now, this is good news for a
geometer because there's this

960
00:46:01,520 --> 00:46:04,840
giant obstacle-- think
of it as a half space--

961
00:46:04,840 --> 00:46:07,710
which the protein cannot
penetrate while it's being

962
00:46:07,710 --> 00:46:08,550
produced over here.

963
00:46:08,550 --> 00:46:12,320

964
00:46:12,320 --> 00:46:13,510
That's it.

965
00:46:13,510 --> 00:46:17,530
That half space constraint
is enough to get

966
00:46:17,530 --> 00:46:20,600
really good algorithms
for folding your chain.

967
00:46:20,600 --> 00:46:23,640
It's weird because we've
made a problem both harder

968
00:46:23,640 --> 00:46:26,850
because the protein is only
partially produced at any time

969
00:46:26,850 --> 00:46:28,772
and it can fold,
which is part of it,

970
00:46:28,772 --> 00:46:30,230
but we've also made
our life easier

971
00:46:30,230 --> 00:46:32,400
because there's
this big obstacle.

972
00:46:32,400 --> 00:46:34,000
AUDIENCE: [INAUDIBLE]
makes sense

973
00:46:34,000 --> 00:46:37,210
why there's only obtuse
angles there, right?

974
00:46:37,210 --> 00:46:38,169
PROFESSOR: Yeah, right.

975
00:46:38,169 --> 00:46:40,793
Out of this, we're going to get
that the angles and the protein

976
00:46:40,793 --> 00:46:41,810
are constrained.

977
00:46:41,810 --> 00:46:47,930
And in particular, for
this angle-- it depends.

978
00:46:47,930 --> 00:46:54,036
I mean, in this picture because
it's perpendicular here, yeah,

979
00:46:54,036 --> 00:46:55,410
the sharpest angle
you could make

980
00:46:55,410 --> 00:46:58,370
is 90 degrees, more or less.

981
00:46:58,370 --> 00:47:00,260
That's a good point.

982
00:47:00,260 --> 00:47:03,890
So it's a convenient match
between the chemistry, which

983
00:47:03,890 --> 00:47:06,800
also forces the angles
to be obtuse, I guess.

984
00:47:06,800 --> 00:47:08,530
I don't know a ton of chemistry.

985
00:47:08,530 --> 00:47:10,880
But also, the ribosome
just geometrically forces.

986
00:47:10,880 --> 00:47:12,740
We're going to use a
property like that.

987
00:47:12,740 --> 00:47:16,650
Our model is going to be a
little bit more-- both more

988
00:47:16,650 --> 00:47:19,690
general and simpler.

989
00:47:19,690 --> 00:47:23,360
We're going to imagine that
the ribosome is a cone.

990
00:47:23,360 --> 00:47:25,300
It's part of the
upper come here.

991
00:47:25,300 --> 00:47:28,820
This is like a mirror image.

992
00:47:28,820 --> 00:47:31,900
And in reality, that
cone is actually

993
00:47:31,900 --> 00:47:33,702
a plane and everything
above the plane.

994
00:47:33,702 --> 00:47:35,160
But to be more
general, we're going

995
00:47:35,160 --> 00:47:37,444
to allow some angle alpha here.

996
00:47:37,444 --> 00:47:39,860
It's also just easier to think
about when alpha is smaller

997
00:47:39,860 --> 00:47:43,360
than 90, but everything I say
will work when alpha equals 90

998
00:47:43,360 --> 00:47:46,620
and that is sort of
the reality case.

999
00:47:46,620 --> 00:47:52,060
So the model is-- so
the ribosome is a cone.

1000
00:47:52,060 --> 00:47:54,180
We call this the half
angle of the cone.

1001
00:47:54,180 --> 00:47:58,011
From the vertical axis to the
edge of the cone is alpha.

1002
00:47:58,011 --> 00:48:00,010
So if you were going from
one axis to the other,

1003
00:48:00,010 --> 00:48:02,740
it would be 2 alpha.

1004
00:48:02,740 --> 00:48:08,110
The model is, you start with
one link of your chain, which

1005
00:48:08,110 --> 00:48:09,420
is inside the cone.

1006
00:48:09,420 --> 00:48:14,460
It's spews out through the apex.

1007
00:48:14,460 --> 00:48:16,350
That's the exit of the tunnel.

1008
00:48:16,350 --> 00:48:19,430
Here, we're allowing the tunnel
to be actually quite free.

1009
00:48:19,430 --> 00:48:23,420
Doesn't have to be
perpendicular to the apex

1010
00:48:23,420 --> 00:48:25,360
or the plane of the apex.

1011
00:48:25,360 --> 00:48:27,420
So the edge comes
out, and as soon

1012
00:48:27,420 --> 00:48:31,350
as the endpoint of the
chain reaches here,

1013
00:48:31,350 --> 00:48:32,930
then a new link is created.

1014
00:48:32,930 --> 00:48:37,650
This is like a very simple model
for how a chain can come out

1015
00:48:37,650 --> 00:48:39,550
of a cone without
worrying about what's

1016
00:48:39,550 --> 00:48:41,440
happening inside the cone.

1017
00:48:41,440 --> 00:48:43,777
Imagining everything's
totally free.

1018
00:48:43,777 --> 00:48:45,610
This is like you can
allow self intersection

1019
00:48:45,610 --> 00:48:46,972
in the cone, who knows what.

1020
00:48:46,972 --> 00:48:48,430
But once you come
outside the cone,

1021
00:48:48,430 --> 00:48:50,070
you're not allowed
to self intersect

1022
00:48:50,070 --> 00:48:52,620
and you're not allowed
to intersect the cone.

1023
00:48:52,620 --> 00:48:56,060
Once you come out,
you can't go back in.

1024
00:48:56,060 --> 00:49:00,360
So that is a model of
producing protein chains.

1025
00:49:00,360 --> 00:49:03,740
And if you have a
cone of angle alpha,

1026
00:49:03,740 --> 00:49:06,770
we call this an alpha
producible chain.

1027
00:49:06,770 --> 00:49:09,590

1028
00:49:09,590 --> 00:49:13,462
For whatever reason, we often
call it beta producible chain.

1029
00:49:13,462 --> 00:49:14,760
Just change the variable.

1030
00:49:14,760 --> 00:49:40,160

1031
00:49:40,160 --> 00:49:43,430
So if you think of the ribosome
as a cone with half angle beta,

1032
00:49:43,430 --> 00:49:45,110
you can produce it like this.

1033
00:49:45,110 --> 00:49:46,110
That is beta producible.

1034
00:49:46,110 --> 00:49:48,040
Now this is a pretty
powerful model

1035
00:49:48,040 --> 00:49:50,675
because you only have to
worry about it link by link.

1036
00:49:50,675 --> 00:49:52,800
You don't have to worry
about the rest of the chain

1037
00:49:52,800 --> 00:49:54,992
until it spews
outside of the cone.

1038
00:49:54,992 --> 00:49:57,450
But it's restrictive in that
you cannot penetrate the cone.

1039
00:49:57,450 --> 00:50:01,060

1040
00:50:01,060 --> 00:50:02,320
All right.

1041
00:50:02,320 --> 00:50:06,310
One thing we can
talk about is angles.

1042
00:50:06,310 --> 00:50:11,220
So I'm going to
write call a chain

1043
00:50:11,220 --> 00:50:14,310
a less than or
equal to alpha chain

1044
00:50:14,310 --> 00:50:17,505
if all the turn angles are
less than or equal to alpha.

1045
00:50:17,505 --> 00:50:21,920

1046
00:50:21,920 --> 00:50:24,360
I don't know if I've used
turn angles in this class.

1047
00:50:24,360 --> 00:50:26,400
Probably.

1048
00:50:26,400 --> 00:50:30,770
If I have two edges,
the angle would be this.

1049
00:50:30,770 --> 00:50:32,900
The turn angle would be
this, the supplement.

1050
00:50:32,900 --> 00:50:37,610

1051
00:50:37,610 --> 00:50:38,110
Yeah.

1052
00:50:38,110 --> 00:50:39,610
I guess we used
turn angles way back

1053
00:50:39,610 --> 00:50:41,881
in origami land, Kawasaki's
theorem and so on.

1054
00:50:41,881 --> 00:50:43,380
It's just, if you're
going straight,

1055
00:50:43,380 --> 00:50:47,250
how much do you have to turn
to get to the next edge.

1056
00:50:47,250 --> 00:50:49,930
So we'd like fairly
obtuse things.

1057
00:50:49,930 --> 00:50:51,380
So alpha is going to be small.

1058
00:50:51,380 --> 00:50:53,260
There isn't a ton of turn.

1059
00:50:53,260 --> 00:50:56,370
But in general, less than or
equal to alpha chain for some

1060
00:50:56,370 --> 00:50:56,940
alpha.

1061
00:50:56,940 --> 00:50:59,070
Now there's a relation--
as Jason was mentioning,

1062
00:50:59,070 --> 00:51:02,650
there's a relation between
alpha and beta in the ribosome

1063
00:51:02,650 --> 00:51:04,470
because you always
exited orthogonally

1064
00:51:04,470 --> 00:51:08,230
to the plane that was your cone.

1065
00:51:08,230 --> 00:51:13,620
The sharpest angle you could
get was 90 degree turn angle.

1066
00:51:13,620 --> 00:51:17,670
Here, we're a little freer
because this edge can wiggle

1067
00:51:17,670 --> 00:51:20,450
around as long as
it touches the apex.

1068
00:51:20,450 --> 00:51:23,737
So if you're up
against the cone,

1069
00:51:23,737 --> 00:51:26,070
you have to slide out into
the complimentary cone-- that

1070
00:51:26,070 --> 00:51:30,990
was the previous picture--
and as soon as you get there,

1071
00:51:30,990 --> 00:51:33,810
you could create a new
edge which is like this.

1072
00:51:33,810 --> 00:51:38,610
So the sharpest angle you can
get is actually twice beta.

1073
00:51:38,610 --> 00:51:44,432
In general, we're going to
have alpha over 2 is less than

1074
00:51:44,432 --> 00:51:45,140
or equal to beta.

1075
00:51:45,140 --> 00:51:50,170
That is-- you can get up
to beta equals 2 alpha.

1076
00:51:50,170 --> 00:51:50,920
Get that right.

1077
00:51:50,920 --> 00:51:56,440

1078
00:51:56,440 --> 00:52:00,800
And also in the obtuse case,
this is not too exciting.

1079
00:52:00,800 --> 00:52:01,480
But it's true.

1080
00:52:01,480 --> 00:52:05,140

1081
00:52:05,140 --> 00:52:06,640
There's actually
some problems here.

1082
00:52:06,640 --> 00:52:08,490
When you have that
full flexibility

1083
00:52:08,490 --> 00:52:15,260
and you set alpha to two beta,
not the other way around.

1084
00:52:15,260 --> 00:52:21,930
I'm going to assume here
that alpha equals beta.

1085
00:52:21,930 --> 00:52:24,000
This will be convenient.

1086
00:52:24,000 --> 00:52:27,580
And it's the interesting case
because, in reality, the cone

1087
00:52:27,580 --> 00:52:29,360
has a half angle of 90 degrees.

1088
00:52:29,360 --> 00:52:31,610
So beta is 90.

1089
00:52:31,610 --> 00:52:33,390
And the sharpest angle
we're going to make

1090
00:52:33,390 --> 00:52:34,520
was always obtuse.

1091
00:52:34,520 --> 00:52:37,580
So saying that you have a
less than or equal to 90 chain

1092
00:52:37,580 --> 00:52:39,010
is just fine.

1093
00:52:39,010 --> 00:52:41,170
But on the mathematical
side, I think

1094
00:52:41,170 --> 00:52:45,510
we saw the case when alpha is
less than or equal to beta,

1095
00:52:45,510 --> 00:52:48,780
but not when alpha over 2 is
less than or equal to beta.

1096
00:52:48,780 --> 00:52:51,020
That's a weaker constraint.

1097
00:52:51,020 --> 00:52:53,880
So there is a range
where it's not so easy.

1098
00:52:53,880 --> 00:52:57,850

1099
00:52:57,850 --> 00:53:00,770
Now, what do I claim
about these chains other

1100
00:53:00,770 --> 00:53:04,740
than their angles
are not so sharp?

1101
00:53:04,740 --> 00:53:10,080
I claim they're good
algorithms for folding them.

1102
00:53:10,080 --> 00:53:11,950
What could I possibly mean?

1103
00:53:11,950 --> 00:53:14,190
There are still
locked configurations.

1104
00:53:14,190 --> 00:53:16,060
Is that true?

1105
00:53:16,060 --> 00:53:21,510
Well, I mean presumably--
this is acute--

1106
00:53:21,510 --> 00:53:24,767
but you take the obtuse
versions of this guy.

1107
00:53:24,767 --> 00:53:27,100
Because I didn't constrain
the edge lengths or anything,

1108
00:53:27,100 --> 00:53:30,140
I just said that the
angles are obtuse.

1109
00:53:30,140 --> 00:53:33,040
So I could just sort of round
these corners, make it obtuse.

1110
00:53:33,040 --> 00:53:35,550
You know, add lots of
dots just at the corners

1111
00:53:35,550 --> 00:53:36,860
that would be obtuse.

1112
00:53:36,860 --> 00:53:40,400
And a chain like this
will be producible.

1113
00:53:40,400 --> 00:53:42,690
A chain with these angles
and these edge lengths

1114
00:53:42,690 --> 00:53:44,540
can be produced from a cone.

1115
00:53:44,540 --> 00:53:49,200
But this configuration of
this chain cannot be produced,

1116
00:53:49,200 --> 00:53:50,260
I claim.

1117
00:53:50,260 --> 00:53:53,260
I claim anything
that can be produced

1118
00:53:53,260 --> 00:53:56,100
is in one connected component.

1119
00:53:56,100 --> 00:53:58,315
So while I can make a
linkage that is locked

1120
00:53:58,315 --> 00:54:00,440
and that there are bad
configurations you can't get

1121
00:54:00,440 --> 00:54:02,580
out of, the things
you can actually make,

1122
00:54:02,580 --> 00:54:04,720
you can always get out of.

1123
00:54:04,720 --> 00:54:09,480
So there's going to be the space
of producible configurations.

1124
00:54:09,480 --> 00:54:12,867

1125
00:54:12,867 --> 00:54:14,700
Maybe there's some stuff
that's unproducible

1126
00:54:14,700 --> 00:54:16,300
but still connected to it.

1127
00:54:16,300 --> 00:54:16,925
I don't know.

1128
00:54:16,925 --> 00:54:18,050
It doesn't matter too much.

1129
00:54:18,050 --> 00:54:19,960
I won't worry about this stuff.

1130
00:54:19,960 --> 00:54:23,950
There's other bad locked
configurations that cannot

1131
00:54:23,950 --> 00:54:24,830
reach here.

1132
00:54:24,830 --> 00:54:27,500
But everything that's producible
is in one connected component

1133
00:54:27,500 --> 00:54:29,010
of the configuration space.

1134
00:54:29,010 --> 00:54:30,300
That's property one.

1135
00:54:30,300 --> 00:54:31,920
That's kind of nice.

1136
00:54:31,920 --> 00:54:36,412
Also, all the flat states
are going to be in here.

1137
00:54:36,412 --> 00:54:37,620
This is actually pretty easy.

1138
00:54:37,620 --> 00:54:40,070
I just need to prove that
flat states are producible,

1139
00:54:40,070 --> 00:54:41,820
which we'll worry about later.

1140
00:54:41,820 --> 00:54:45,430
So in particular, these guys
are flat state connected.

1141
00:54:45,430 --> 00:54:47,240
All the producible
protein chains

1142
00:54:47,240 --> 00:54:48,524
are flat state connected.

1143
00:54:48,524 --> 00:54:50,190
That's interesting
because we don't even

1144
00:54:50,190 --> 00:54:52,560
know that all chains are
flat state connected.

1145
00:54:52,560 --> 00:54:55,230
But here-- I guess we know
that obtuse chains are

1146
00:54:55,230 --> 00:55:00,850
flat state connected, so
maybe it's not so surprising.

1147
00:55:00,850 --> 00:55:03,440
But what's important is not only
are the flat states connected

1148
00:55:03,440 --> 00:55:05,020
to each other and
the producible states

1149
00:55:05,020 --> 00:55:06,811
are connected to each
other, but producible

1150
00:55:06,811 --> 00:55:08,670
is connected to flat states.

1151
00:55:08,670 --> 00:55:09,900
Everything is together here.

1152
00:55:09,900 --> 00:55:12,412

1153
00:55:12,412 --> 00:55:13,620
I might have more properties.

1154
00:55:13,620 --> 00:55:15,036
But that's already
some good news.

1155
00:55:15,036 --> 00:55:18,660
And there's algorithms
to do all of this.

1156
00:55:18,660 --> 00:55:21,390
How do we prove it?

1157
00:55:21,390 --> 00:55:31,390
Well, as usual we
use the FedEx method.

1158
00:55:31,390 --> 00:55:34,190
And in some sense,
one of the challenges

1159
00:55:34,190 --> 00:55:45,550
is what is the natural canonical
state for protein chains?

1160
00:55:45,550 --> 00:55:50,096
In fact, we're just going to
assume that our chain is--

1161
00:55:50,096 --> 00:55:51,470
in reality, we're
going to assume

1162
00:55:51,470 --> 00:55:55,580
that it's an orthogonal chain--
an obtuse chain, I should say.

1163
00:55:55,580 --> 00:55:58,540
But in general, for any
less than or equal to alpha

1164
00:55:58,540 --> 00:56:00,800
chain, for whatever
alpha you like-- and it

1165
00:56:00,800 --> 00:56:06,700
will be the half angle of the
cone, so alpha equals beta--

1166
00:56:06,700 --> 00:56:08,635
we will define a
canonical configuration.

1167
00:56:08,635 --> 00:56:21,510

1168
00:56:21,510 --> 00:56:23,265
I think we called
it the alpha CCC.

1169
00:56:23,265 --> 00:56:27,560

1170
00:56:27,560 --> 00:56:31,940
So it's going to be
kind of like a helix.

1171
00:56:31,940 --> 00:56:36,156
I think I have an example,
an actual computed example.

1172
00:56:36,156 --> 00:56:37,780
That's not the best
picture because you

1173
00:56:37,780 --> 00:56:39,321
can't see everything
that's going on.

1174
00:56:39,321 --> 00:56:42,010
But this is an actual
canonical configuration

1175
00:56:42,010 --> 00:56:43,580
of a particular chain.

1176
00:56:43,580 --> 00:56:47,480

1177
00:56:47,480 --> 00:56:49,910
Let me tell you how
it works in general.

1178
00:56:49,910 --> 00:56:54,490
So in general, we have
some chain, v1, v2-- sorry,

1179
00:56:54,490 --> 00:56:58,060
starting at v0, v1, v2.

1180
00:56:58,060 --> 00:56:59,970
I want to define a
canonical-- and there's

1181
00:56:59,970 --> 00:57:01,810
defined lengths between the two.

1182
00:57:01,810 --> 00:57:05,040
And there's defined angles
between every triple

1183
00:57:05,040 --> 00:57:07,740
in sequence.

1184
00:57:07,740 --> 00:57:10,579
So I'm going to start
with v0 somewhere.

1185
00:57:10,579 --> 00:57:12,120
Doesn't really matter
by translation.

1186
00:57:12,120 --> 00:57:15,370
Say, the origin of space.

1187
00:57:15,370 --> 00:57:26,960
And what I'm going to do is draw
a cone whose apex is that v0.

1188
00:57:26,960 --> 00:57:32,910
And the half angle here is
going to be alpha over two,

1189
00:57:32,910 --> 00:57:34,210
not alpha.

1190
00:57:34,210 --> 00:57:37,500
This is a smaller cone
than-- by a factor of two--

1191
00:57:37,500 --> 00:57:39,660
than the ribosome.

1192
00:57:39,660 --> 00:57:41,870
That's important.

1193
00:57:41,870 --> 00:57:45,230
So there's this vertical line.

1194
00:57:45,230 --> 00:57:49,580
And to pick v1, I'm just going
to use the right edge, which

1195
00:57:49,580 --> 00:57:52,460
is-- let's say this
is the x direction.

1196
00:57:52,460 --> 00:57:54,110
This is the z direction.

1197
00:57:54,110 --> 00:57:56,194
Maximum x-coordinate.

1198
00:57:56,194 --> 00:57:58,360
It's going to lie on the
cone, maximum x-coordinate.

1199
00:57:58,360 --> 00:57:59,920
That's v1.

1200
00:57:59,920 --> 00:58:05,060
Now, v1-- let me redraw
this picture a little lower.

1201
00:58:05,060 --> 00:58:10,140
So there was v0, v1.

1202
00:58:10,140 --> 00:58:12,280
Now I want to draw v2, and
I want to draw it above.

1203
00:58:12,280 --> 00:58:14,890

1204
00:58:14,890 --> 00:58:20,460
So what I'll do is
draw a vertical column

1205
00:58:20,460 --> 00:58:23,800
whose half angle here
is alpha over two.

1206
00:58:23,800 --> 00:58:26,770

1207
00:58:26,770 --> 00:58:28,790
I want to draw v2
on the cone here.

1208
00:58:28,790 --> 00:58:30,280
Of course, the
height of the cone

1209
00:58:30,280 --> 00:58:34,700
is the length of the
edge, not the height.

1210
00:58:34,700 --> 00:58:36,370
You could think of
the cone as infinite.

1211
00:58:36,370 --> 00:58:39,740
And then I just clip this to
when it has the right length.

1212
00:58:39,740 --> 00:58:42,470
So again, this might be
a different height cone.

1213
00:58:42,470 --> 00:58:44,970
I clip it to whatever
the length v1, v2 is.

1214
00:58:44,970 --> 00:58:47,540
I want it to be
somewhere on this cone,

1215
00:58:47,540 --> 00:58:50,570
but now I'm constrained to
have the correct angle at v1.

1216
00:58:50,570 --> 00:58:53,050
I can't just put it over here,
because then the angle here

1217
00:58:53,050 --> 00:58:53,930
would be 180.

1218
00:58:53,930 --> 00:58:57,130
Presumably, I don't want
to make a 180 degree angle.

1219
00:58:57,130 --> 00:58:59,070
So in reality, what
happens is that there's

1220
00:58:59,070 --> 00:59:09,080
a cone which is-- whose
axis is the edge v0, v1.

1221
00:59:09,080 --> 00:59:12,900
So I extend v0 v1 out
here, which, in this case,

1222
00:59:12,900 --> 00:59:14,910
happens to lie here.

1223
00:59:14,910 --> 00:59:18,319
And I make a cone like that.

1224
00:59:18,319 --> 00:59:19,985
Let me draw it slightly
more accurately.

1225
00:59:19,985 --> 00:59:26,310

1226
00:59:26,310 --> 00:59:32,050
In this case, the
center axis of the cone

1227
00:59:32,050 --> 00:59:37,490
would go right here, whatever
the extension of v0, v1 was.

1228
00:59:37,490 --> 00:59:44,710
And to have the right angle at
v1, v2 must be on that cone.

1229
00:59:44,710 --> 00:59:47,010
Conveniently, there are
two intersection points

1230
00:59:47,010 --> 00:59:48,800
between those two cones.

1231
00:59:48,800 --> 00:59:51,740
I could choose either
one of them to be v2.

1232
00:59:51,740 --> 00:59:55,800
And I will choose the
counterclockwise most one,

1233
00:59:55,800 --> 00:59:58,060
which is this one.

1234
00:59:58,060 --> 01:00:00,192
This is going to be v2.

1235
01:00:00,192 --> 01:00:03,380
So I draw that edge.

1236
01:00:03,380 --> 01:00:05,590
Now I repeat.

1237
01:00:05,590 --> 01:00:08,630
So for v2, I'm going to
draw a vertical cone whose

1238
01:00:08,630 --> 01:00:12,440
half angle-- here, the half
angle is always alpha over two.

1239
01:00:12,440 --> 01:00:14,430
Half angle is alpha over two.

1240
01:00:14,430 --> 01:00:25,570
This cone had half angle,
whatever the angle v0, v1, v2

1241
01:00:25,570 --> 01:00:27,340
was.

1242
01:00:27,340 --> 01:00:28,960
Was that the half
angle or angle?

1243
01:00:28,960 --> 01:00:30,004
The half angle.

1244
01:00:30,004 --> 01:00:30,920
I think this is right.

1245
01:00:30,920 --> 01:00:33,580

1246
01:00:33,580 --> 01:00:35,610
OK.

1247
01:00:35,610 --> 01:00:38,410
And then I take the
intersection of those two cones,

1248
01:00:38,410 --> 01:00:41,250
and that will give
me where v3 is.

1249
01:00:41,250 --> 01:00:44,476
So I do the same thing
for v2, for v3, and so on.

1250
01:00:44,476 --> 01:00:46,100
I have a unique choice
at every moment.

1251
01:00:46,100 --> 01:00:49,900

1252
01:00:49,900 --> 01:00:52,390
Yeah, basically.

1253
01:00:52,390 --> 01:00:54,310
And the only exception
was at the beginning

1254
01:00:54,310 --> 01:00:56,840
here, when I had
a vertical line.

1255
01:00:56,840 --> 01:00:58,800
These two cones could
actually be equal,

1256
01:00:58,800 --> 01:01:01,266
and then the intersection
is the entire cone.

1257
01:01:01,266 --> 01:01:02,640
And that case, I
guess I'd choose

1258
01:01:02,640 --> 01:01:04,880
the maximum
x-coordinate one again.

1259
01:01:04,880 --> 01:01:06,850
And then I have a
canonical choice

1260
01:01:06,850 --> 01:01:08,580
of everything along the way.

1261
01:01:08,580 --> 01:01:09,469
It will always go up.

1262
01:01:09,469 --> 01:01:11,010
And it sort of
spinals around because

1263
01:01:11,010 --> 01:01:13,680
of the counter
clockwise most choice.

1264
01:01:13,680 --> 01:01:16,890
And the result is a
picture like this.

1265
01:01:16,890 --> 01:01:21,946

1266
01:01:21,946 --> 01:01:23,320
Anything else I
need to say here?

1267
01:01:23,320 --> 01:01:25,880

1268
01:01:25,880 --> 01:01:30,690
I claim this canonical
configuration

1269
01:01:30,690 --> 01:01:37,050
lies in an alpha over
2 half angle cone.

1270
01:01:37,050 --> 01:01:40,770

1271
01:01:40,770 --> 01:01:43,590
That's true by construction.

1272
01:01:43,590 --> 01:01:46,910
The challenge is, does the
construction really work?

1273
01:01:46,910 --> 01:01:48,945
So I start, obviously,
with one cone,

1274
01:01:48,945 --> 01:01:51,320
and I can think of this as
actually an infinite cone that

1275
01:01:51,320 --> 01:01:53,420
goes out to infinity here.

1276
01:01:53,420 --> 01:01:55,200
And I claim the
entire construction

1277
01:01:55,200 --> 01:01:57,590
will lie inside that cone.

1278
01:01:57,590 --> 01:02:00,430
And it's kind of
obvious because v1--

1279
01:02:00,430 --> 01:02:07,120
I chose v2 to lie in the
same cone, just translated up

1280
01:02:07,120 --> 01:02:10,290
to start at v1 instead
of starting at v0.

1281
01:02:10,290 --> 01:02:13,380
Of course, this cone is
contained in this bigger one.

1282
01:02:13,380 --> 01:02:15,970
And by induction, in fact,
the entire rest of the chain

1283
01:02:15,970 --> 01:02:18,230
will lie in this smaller cone.

1284
01:02:18,230 --> 01:02:21,940
Therefore, it lies
in the big one, also.

1285
01:02:21,940 --> 01:02:24,030
OK.

1286
01:02:24,030 --> 01:02:25,040
Fine.

1287
01:02:25,040 --> 01:02:28,130
So by construction it will
lie in alpha over two cone.

1288
01:02:28,130 --> 01:02:30,325
The worry is that these
two cones don't intersect.

1289
01:02:30,325 --> 01:02:32,880

1290
01:02:32,880 --> 01:02:34,600
Here we have an angle.

1291
01:02:34,600 --> 01:02:36,540
The half angle of
the cone is whatever

1292
01:02:36,540 --> 01:02:39,180
angle the angle is at v1.

1293
01:02:39,180 --> 01:02:40,680
Sorry, this should
not be the angle.

1294
01:02:40,680 --> 01:02:41,930
This should be the turn angle.

1295
01:02:41,930 --> 01:02:48,240

1296
01:02:48,240 --> 01:02:51,810
That angle is how much
you turn from v0, v1.

1297
01:02:51,810 --> 01:02:54,130
Now, we know that-- we're
assuming that-- the turn

1298
01:02:54,130 --> 01:02:55,510
angles are all, at most, alpha.

1299
01:02:55,510 --> 01:02:58,200

1300
01:02:58,200 --> 01:03:00,540
The turn angle
cone could actually

1301
01:03:00,540 --> 01:03:04,120
be twice as big as the vertical
cone that we were always using.

1302
01:03:04,120 --> 01:03:08,140
We always use a vertical cone,
half angle alpha over two.

1303
01:03:08,140 --> 01:03:12,440
But it's OK because we
always keep these edges,

1304
01:03:12,440 --> 01:03:17,250
like v0, v1, was on
the edge of the cone.

1305
01:03:17,250 --> 01:03:19,180
And so when we
extend it, it lies

1306
01:03:19,180 --> 01:03:21,970
on the edge of
this vertical cone.

1307
01:03:21,970 --> 01:03:27,140
So its angle-- in the most
extreme case-- its half angle

1308
01:03:27,140 --> 01:03:30,780
is alpha, which
would look like this.

1309
01:03:30,780 --> 01:03:33,155
We'll go all the way over from
the right side of the cone

1310
01:03:33,155 --> 01:03:34,360
to the left side of the cone.

1311
01:03:34,360 --> 01:03:36,360
In general, it's not going
to be right and left,

1312
01:03:36,360 --> 01:03:39,710
but it's going to be some
side and the antipodal point.

1313
01:03:39,710 --> 01:03:44,110
And because the double
angle of the cone is alpha,

1314
01:03:44,110 --> 01:03:45,200
it's still OK.

1315
01:03:45,200 --> 01:03:49,100
You will intersect
somewhere on the cone.

1316
01:03:49,100 --> 01:03:51,690
This is a subtle detail,
but it's really crucial

1317
01:03:51,690 --> 01:03:53,550
because we start
with a chain that

1318
01:03:53,550 --> 01:03:56,340
has relatively
large angles, alpha.

1319
01:03:56,340 --> 01:03:58,100
And we get it
into-- we squeeze it

1320
01:03:58,100 --> 01:04:01,320
into-- a cone that
still has double-- twice

1321
01:04:01,320 --> 01:04:03,740
its angle is alpha,
but we kind of

1322
01:04:03,740 --> 01:04:07,527
compress it into something
of half angle alpha over two.

1323
01:04:07,527 --> 01:04:09,735
You might think, oh, I'm
just changing the definition

1324
01:04:09,735 --> 01:04:10,954
and calling it half angle.

1325
01:04:10,954 --> 01:04:12,620
Therefore, it gets
to an alpha over two.

1326
01:04:12,620 --> 01:04:14,710
But it's a little
tricky to actually get

1327
01:04:14,710 --> 01:04:18,020
it to fit in a vertical
alpha over two cone.

1328
01:04:18,020 --> 01:04:20,230
Once we have this,
it's really easy

1329
01:04:20,230 --> 01:04:22,970
to canonicalize a chain,
a producible chain.

1330
01:04:22,970 --> 01:04:25,260
So let me tell you
how to do that.

1331
01:04:25,260 --> 01:04:51,880

1332
01:04:51,880 --> 01:04:54,010
So we're going use
the FedEx method

1333
01:04:54,010 --> 01:04:57,070
of taking some configuration
and canonicalizing it, and then

1334
01:04:57,070 --> 01:04:59,410
uncanonicalizing
to something else.

1335
01:04:59,410 --> 01:05:01,800
We're also going to use a
new method, which I just

1336
01:05:01,800 --> 01:05:02,860
came up with the term.

1337
01:05:02,860 --> 01:05:05,450
Is called the
momento method which

1338
01:05:05,450 --> 01:05:09,870
is you play the
movie in reverse.

1339
01:05:09,870 --> 01:05:13,630
So, I guess, also
the Merlin method.

1340
01:05:13,630 --> 01:05:16,320
That's more complicated.

1341
01:05:16,320 --> 01:05:21,170
So we have a movie
here in mind, which

1342
01:05:21,170 --> 01:05:23,710
is how was the chain produced?

1343
01:05:23,710 --> 01:05:26,340
So what I want to
show is that if-- I

1344
01:05:26,340 --> 01:05:31,780
want to start with a producible
configuration and chain.

1345
01:05:31,780 --> 01:05:34,290

1346
01:05:34,290 --> 01:05:36,680
Somehow, it got produced.

1347
01:05:36,680 --> 01:05:40,940
So you had your
cone and the thing

1348
01:05:40,940 --> 01:05:44,660
starts spewing out and
folding, and doing whatever.

1349
01:05:44,660 --> 01:05:48,307
That's an animation, in some
sense, of one edge coming out

1350
01:05:48,307 --> 01:05:49,890
and stuff is folding
at the same time.

1351
01:05:49,890 --> 01:05:51,639
Then an edge is created,
then another edge

1352
01:05:51,639 --> 01:05:52,750
comes out, and so on.

1353
01:05:52,750 --> 01:05:55,070
What I want to do is play
that movie backwards.

1354
01:05:55,070 --> 01:05:57,190
It's a pretty intuitive idea.

1355
01:05:57,190 --> 01:06:00,810
I just want to start feeding
the edges back into the cone,

1356
01:06:00,810 --> 01:06:02,500
and just keep stuffing them in.

1357
01:06:02,500 --> 01:06:04,560
Now, what happens
out here is easy

1358
01:06:04,560 --> 01:06:07,060
because we know it doesn't
penetrate the cone.

1359
01:06:07,060 --> 01:06:08,460
That's the assumption.

1360
01:06:08,460 --> 01:06:11,620
And we know whatever was
created here could be uncreated,

1361
01:06:11,620 --> 01:06:16,350
as long as you can afford
to erase edges one by one.

1362
01:06:16,350 --> 01:06:17,742
That's the tricky part.

1363
01:06:17,742 --> 01:06:18,700
How do I erase an edge?

1364
01:06:18,700 --> 01:06:21,090
And usually, I can't.

1365
01:06:21,090 --> 01:06:23,450
But I don't have
to erase any edge.

1366
01:06:23,450 --> 01:06:25,270
Like, if I had to
erase this one,

1367
01:06:25,270 --> 01:06:27,450
that would be hard
because some motion here

1368
01:06:27,450 --> 01:06:30,580
might penetrate where that
edge ought to have been.

1369
01:06:30,580 --> 01:06:36,590
And erasing the
edge will make it--

1370
01:06:36,590 --> 01:06:38,820
adding the edge makes
it harder to fold.

1371
01:06:38,820 --> 01:06:41,380
So I can't erase it.

1372
01:06:41,380 --> 01:06:43,130
But the edges I have
to erase are the ones

1373
01:06:43,130 --> 01:06:45,110
that have been fully
inserted into the cone.

1374
01:06:45,110 --> 01:06:51,570
So if I can somehow do something
inside the cone, I would be OK.

1375
01:06:51,570 --> 01:06:55,110
All this work, defining a
canonical configuration,

1376
01:06:55,110 --> 01:06:58,086
was about forcing a chain to
stay inside a cone-- and not

1377
01:06:58,086 --> 01:06:59,710
only an alpha cone,
which is what we're

1378
01:06:59,710 --> 01:07:03,300
going to have as the ribosome,
but an alpha over two cone.

1379
01:07:03,300 --> 01:07:07,420
This is smaller than my
ribosome cone by factor of two.

1380
01:07:07,420 --> 01:07:09,952
And I need that.

1381
01:07:09,952 --> 01:07:11,320
Why do I need that?

1382
01:07:11,320 --> 01:07:17,457
Because this thing, I have no
control over the outside chain.

1383
01:07:17,457 --> 01:07:19,040
So the way that it
approaches the cone

1384
01:07:19,040 --> 01:07:22,300
could be as sharp
as like this, where

1385
01:07:22,300 --> 01:07:26,125
I have the first edge that
is-- the current edge that

1386
01:07:26,125 --> 01:07:27,016
is-- inside the cone.

1387
01:07:27,016 --> 01:07:28,390
As far as the
movie is concerned,

1388
01:07:28,390 --> 01:07:29,640
there's only one edge.

1389
01:07:29,640 --> 01:07:31,600
There's nothing up here.

1390
01:07:31,600 --> 01:07:34,520
I want to put something up
here, in a cone, naturally.

1391
01:07:34,520 --> 01:07:37,530

1392
01:07:37,530 --> 01:07:40,972
But I don't get to control
the first angle because that

1393
01:07:40,972 --> 01:07:42,180
is controlled by this motion.

1394
01:07:42,180 --> 01:07:44,747
Maybe it really needed
to go sharp like that

1395
01:07:44,747 --> 01:07:46,830
so that it could make a
sharper angle or whatever.

1396
01:07:46,830 --> 01:07:52,220

1397
01:07:52,220 --> 01:07:57,710
So you might say, well, of
course I can put it inside

1398
01:07:57,710 --> 01:08:02,520
and alpha cone, which is
the same as this alpha.

1399
01:08:02,520 --> 01:08:04,390
Sorry-- bad picture.

1400
01:08:04,390 --> 01:08:07,410
This is alpha.

1401
01:08:07,410 --> 01:08:10,470
This would be a problem because
I have this weird angle coming

1402
01:08:10,470 --> 01:08:13,980
in, and now suddenly I have
to bend back like that.

1403
01:08:13,980 --> 01:08:16,229
Maybe the turn angle here
is not so sharp as alpha.

1404
01:08:16,229 --> 01:08:19,120
Maybe it's one degree.

1405
01:08:19,120 --> 01:08:22,180
So I really can't force
the rest of my chain

1406
01:08:22,180 --> 01:08:24,710
to lie in this cone.

1407
01:08:24,710 --> 01:08:31,410
But I claim I can force
it to lie in this cone,

1408
01:08:31,410 --> 01:08:34,640
with half angle alpha over two.

1409
01:08:34,640 --> 01:08:38,300
This is a little more subtle.

1410
01:08:38,300 --> 01:08:39,490
Oh, right.

1411
01:08:39,490 --> 01:08:43,300
I wanted to mention that
helices appear in nature.

1412
01:08:43,300 --> 01:08:45,370
They appear in
proteins, but they also

1413
01:08:45,370 --> 01:08:48,563
appear in this
crazy climber plant.

1414
01:08:48,563 --> 01:08:50,229
Marty, have you seen
this in Costa Rica?

1415
01:08:50,229 --> 01:08:50,924
AUDIENCE: Yeah.

1416
01:08:50,924 --> 01:08:51,590
PROFESSOR: Yeah.

1417
01:08:51,590 --> 01:08:53,970
There's some really incredible
wildlife in Costa Rica.

1418
01:08:53,970 --> 01:08:56,178
I've never been there, but
I've seen lots of pictures

1419
01:08:56,178 --> 01:09:00,390
and this is spirals in practice.

1420
01:09:00,390 --> 01:09:03,145
Also, proteins tend
to form these things.

1421
01:09:03,145 --> 01:09:05,020
They call them out alpha
helices because they

1422
01:09:05,020 --> 01:09:08,479
spin like an alpha, I guess.

1423
01:09:08,479 --> 01:09:11,060
So it's kind of neat that the
canonical configuration, which

1424
01:09:11,060 --> 01:09:13,340
is totally
geometrically motivated,

1425
01:09:13,340 --> 01:09:16,091
also appears in biology.

1426
01:09:16,091 --> 01:09:19,210
Not that kind of biology though.

1427
01:09:19,210 --> 01:09:21,779
So here is the picture.

1428
01:09:21,779 --> 01:09:23,930
I have the big cone.

1429
01:09:23,930 --> 01:09:25,390
That is my ribosome,
and here I'm

1430
01:09:25,390 --> 01:09:29,670
going to write beta for
the-- beta for big, I guess.

1431
01:09:29,670 --> 01:09:33,740
And then we know that we
can canonicalize a chain,

1432
01:09:33,740 --> 01:09:36,060
or there at least exists
a canonical configuration

1433
01:09:36,060 --> 01:09:39,069
of the chain, where
everything lies

1434
01:09:39,069 --> 01:09:43,330
inside a cone of half
angle alpha over two.

1435
01:09:43,330 --> 01:09:48,060
Now the problem is that cone, we
want it to be at a funny angle.

1436
01:09:48,060 --> 01:09:50,899

1437
01:09:50,899 --> 01:09:52,290
Let me draw a real picture.

1438
01:09:52,290 --> 01:09:59,280

1439
01:09:59,280 --> 01:10:01,880
Here's a ribosome.

1440
01:10:01,880 --> 01:10:04,610
It has a big angle here.

1441
01:10:04,610 --> 01:10:07,620
We'll call alpha.

1442
01:10:07,620 --> 01:10:10,520
Now, I'm going to do
the not extreme case,

1443
01:10:10,520 --> 01:10:12,850
try to be a little more general.

1444
01:10:12,850 --> 01:10:14,990
There's some edge that
is currently entering,

1445
01:10:14,990 --> 01:10:19,540
and we have no control over that
edge or the rest of the chain.

1446
01:10:19,540 --> 01:10:21,270
That's determined
by the movie which

1447
01:10:21,270 --> 01:10:24,020
we're trying to play backwards.

1448
01:10:24,020 --> 01:10:27,636
What we have to control, and
what we're free to control,

1449
01:10:27,636 --> 01:10:29,260
is the rest of the
chain because as far

1450
01:10:29,260 --> 01:10:31,551
as the movie is concerned,
that hasn't been created yet

1451
01:10:31,551 --> 01:10:34,060
or it's already been destroyed,
depending on whether you're

1452
01:10:34,060 --> 01:10:36,314
playing forwards or backwards.

1453
01:10:36,314 --> 01:10:37,730
We need to say
what happens to it.

1454
01:10:37,730 --> 01:10:40,680
And what I want to happen
is so that by the time

1455
01:10:40,680 --> 01:10:44,600
this edge is inside,
that edge plus the rest

1456
01:10:44,600 --> 01:10:46,750
is in the canonical
configuration.

1457
01:10:46,750 --> 01:10:48,530
If I can achieve
that, then as edges

1458
01:10:48,530 --> 01:10:50,185
come in they become
canonicalized,

1459
01:10:50,185 --> 01:10:52,560
and then everything will be
canonical and inside the cone

1460
01:10:52,560 --> 01:10:53,990
and we're done.

1461
01:10:53,990 --> 01:10:55,870
That's our goal.

1462
01:10:55,870 --> 01:10:56,620
Canonicalization.

1463
01:10:56,620 --> 01:10:59,790
So, what's the deal?

1464
01:10:59,790 --> 01:11:06,740
Well, in reality,
there's some cone-- yeah,

1465
01:11:06,740 --> 01:11:08,930
it can penetrate
like that-- could

1466
01:11:08,930 --> 01:11:11,050
penetrate the outside cone.

1467
01:11:11,050 --> 01:11:12,730
This is getting messy.

1468
01:11:12,730 --> 01:11:15,290

1469
01:11:15,290 --> 01:11:20,450
So if I extend this line,
there's a cone of half angle

1470
01:11:20,450 --> 01:11:25,040
here, which is equal to
whatever the turn angle is

1471
01:11:25,040 --> 01:11:28,280
at that vertex, which
is, again, specified.

1472
01:11:28,280 --> 01:11:30,680
We're not free to set
it to whatever we want.

1473
01:11:30,680 --> 01:11:33,310
We know the next edge
must lie on this cone.

1474
01:11:33,310 --> 01:11:35,960

1475
01:11:35,960 --> 01:11:44,040
What I do-- now, on the
other hand, off to the side,

1476
01:11:44,040 --> 01:11:46,440
I have in mind a
vertical cone whose

1477
01:11:46,440 --> 01:11:48,400
half angle is alpha over two.

1478
01:11:48,400 --> 01:11:50,810
So it's quite small.

1479
01:11:50,810 --> 01:11:54,790
And I know-- how do
we do it-- initially,

1480
01:11:54,790 --> 01:11:58,470
the first edge was along
the maximum x direction,

1481
01:11:58,470 --> 01:12:00,170
and then it spirals
up from there.

1482
01:12:00,170 --> 01:12:02,651

1483
01:12:02,651 --> 01:12:03,150
OK.

1484
01:12:03,150 --> 01:12:05,790

1485
01:12:05,790 --> 01:12:07,380
Here's what I'm going to do.

1486
01:12:07,380 --> 01:12:09,440
There are sort of
two situations.

1487
01:12:09,440 --> 01:12:17,160
What I'd like to do is put a
cone here that is vertical.

1488
01:12:17,160 --> 01:12:19,510
Something like that.

1489
01:12:19,510 --> 01:12:21,090
Just like I have here.

1490
01:12:21,090 --> 01:12:24,280
The trouble is, the
right side of this cone

1491
01:12:24,280 --> 01:12:26,352
does not intersect the
boundary of this cone.

1492
01:12:26,352 --> 01:12:28,560
And need it to in order to
form the right angle here.

1493
01:12:28,560 --> 01:12:30,976
It's going to-- it might go
through the middle of the cone

1494
01:12:30,976 --> 01:12:31,857
like it does here.

1495
01:12:31,857 --> 01:12:34,190
So then what I do is I take
this canonical configuration

1496
01:12:34,190 --> 01:12:40,740
and I rotate it so that--
this is hard to draw-- it'll

1497
01:12:40,740 --> 01:12:41,945
be something like this.

1498
01:12:41,945 --> 01:12:44,680

1499
01:12:44,680 --> 01:12:47,190
There's no hope of seeing this.

1500
01:12:47,190 --> 01:12:48,920
So it's on the
surface of this cone.

1501
01:12:48,920 --> 01:12:50,220
It's not on the far right edge.

1502
01:12:50,220 --> 01:12:52,920
It's going to be some
intermediate point.

1503
01:12:52,920 --> 01:12:55,190
And that's exactly where
it intersects this cone.

1504
01:12:55,190 --> 01:12:58,390
It's just like the previous
picture, just harder to see.

1505
01:12:58,390 --> 01:13:00,620
I'm taking the intersection
of these two cones.

1506
01:13:00,620 --> 01:13:02,590
If I just rotate
the picture, then it

1507
01:13:02,590 --> 01:13:05,980
will lie in the intersection--
if they intersect.

1508
01:13:05,980 --> 01:13:07,200
But they might not intersect.

1509
01:13:07,200 --> 01:13:10,250

1510
01:13:10,250 --> 01:13:14,400
So let me go here
and try it again.

1511
01:13:14,400 --> 01:13:18,770

1512
01:13:18,770 --> 01:13:22,220
So the easy case is when
I can draw a vertical cone

1513
01:13:22,220 --> 01:13:26,980
and it intersects the cone
that I need to intersect.

1514
01:13:26,980 --> 01:13:33,450
The harder case is--
maybe it's more extreme.

1515
01:13:33,450 --> 01:13:35,630
Maybe it's a very
tight angle here.

1516
01:13:35,630 --> 01:13:38,190

1517
01:13:38,190 --> 01:13:40,890
So there's a very
small turn angle.

1518
01:13:40,890 --> 01:13:42,240
I have to intersect this cone.

1519
01:13:42,240 --> 01:13:44,090
Because the cone
that I'm working with

1520
01:13:44,090 --> 01:13:49,915
is actually smaller--
it's half of this angle--

1521
01:13:49,915 --> 01:13:51,290
it might not
intersect this cone.

1522
01:13:51,290 --> 01:13:54,450
In that case, I'm going
to rotate the cone

1523
01:13:54,450 --> 01:13:55,990
to fall over a little bit.

1524
01:13:55,990 --> 01:13:59,240

1525
01:13:59,240 --> 01:14:01,765
So instead of being like that,
it's going to be like this.

1526
01:14:01,765 --> 01:14:07,370

1527
01:14:07,370 --> 01:14:07,870
OK.

1528
01:14:07,870 --> 01:14:10,280
So I want the intersection
of these two cones, which

1529
01:14:10,280 --> 01:14:14,780
I've conveniently
made this edge here.

1530
01:14:14,780 --> 01:14:16,540
So the first edge
will lie along here,

1531
01:14:16,540 --> 01:14:18,420
and then it's going to
spiral out from there.

1532
01:14:18,420 --> 01:14:20,253
So I still have the
canonical configuration.

1533
01:14:20,253 --> 01:14:22,400
I've just tilted it.

1534
01:14:22,400 --> 01:14:25,220
Tilting is going to be necessary
because I have this angle

1535
01:14:25,220 --> 01:14:26,500
to match up.

1536
01:14:26,500 --> 01:14:30,770
The convenient thing about
the canonical-- the alpha

1537
01:14:30,770 --> 01:14:33,960
CCC, canonical
configuration-- is

1538
01:14:33,960 --> 01:14:38,440
that I have this half
angle of alpha over two,

1539
01:14:38,440 --> 01:14:43,300
so I can afford to tilt it
by up to alpha over two.

1540
01:14:43,300 --> 01:14:45,540
It will still stay
within the ribosome,

1541
01:14:45,540 --> 01:14:49,070
which is of half angle alpha.

1542
01:14:49,070 --> 01:14:53,840
And all I need to show here--
and once you think about it

1543
01:14:53,840 --> 01:14:57,270
for a while, it's
obvious-- that ideally, I

1544
01:14:57,270 --> 01:14:58,360
don't tilt it at all.

1545
01:14:58,360 --> 01:14:59,340
I've got tons of room.

1546
01:14:59,340 --> 01:15:01,100
Huge amount of room here.

1547
01:15:01,100 --> 01:15:03,830
But sometimes I'll have to
tilt it, but by at most alpha

1548
01:15:03,830 --> 01:15:04,330
over two.

1549
01:15:04,330 --> 01:15:06,800
So I will stay
inside the ribosome,

1550
01:15:06,800 --> 01:15:10,710
because this apex was inside
the cone and the smaller cone,

1551
01:15:10,710 --> 01:15:15,382
even if I tilt it all the
way to meet this edge,

1552
01:15:15,382 --> 01:15:16,590
it will stay inside the cone.

1553
01:15:16,590 --> 01:15:18,930
In fact, it'll stay
inside the big cone.

1554
01:15:18,930 --> 01:15:21,720
In fact, this cone that
I tilt-- the one that

1555
01:15:21,720 --> 01:15:24,060
contains the rest of the
canonical configuration--

1556
01:15:24,060 --> 01:15:29,340
will always contain
the up direction.

1557
01:15:29,340 --> 01:15:31,290
That's how to see it.

1558
01:15:31,290 --> 01:15:34,450
If it always contains the
up direction, then at most,

1559
01:15:34,450 --> 01:15:36,660
it's that big.

1560
01:15:36,660 --> 01:15:41,880
And that will-- because that's
an angle of alpha because that

1561
01:15:41,880 --> 01:15:43,870
was the half angle
of the big cone.

1562
01:15:43,870 --> 01:15:46,350
So that will be a half
angle of alpha over two.

1563
01:15:46,350 --> 01:15:49,130
As long as you contain the
up direction at all times,

1564
01:15:49,130 --> 01:15:52,640
you will not fall
outside the big cone.

1565
01:15:52,640 --> 01:15:56,310
So the rest is just momento.

1566
01:15:56,310 --> 01:15:58,920
So you play this
movie backwards.

1567
01:15:58,920 --> 01:16:02,190
As things come in
here, this cone

1568
01:16:02,190 --> 01:16:03,750
is going to wiggle
back and forth,

1569
01:16:03,750 --> 01:16:06,490
depending on how
this angle changes.

1570
01:16:06,490 --> 01:16:08,700
Once the edge gets
all the way in,

1571
01:16:08,700 --> 01:16:11,006
you absorb it into the
canonical configuration.

1572
01:16:11,006 --> 01:16:13,130
Little bit of work there
but you just sort of twist

1573
01:16:13,130 --> 01:16:16,249
the cone around
until that algorithm

1574
01:16:16,249 --> 01:16:18,540
that we described for producing
canonical configuration

1575
01:16:18,540 --> 01:16:20,870
would actually produce
what's inside the cone.

1576
01:16:20,870 --> 01:16:23,452
Then the next edge comes
in, cone wiggles around

1577
01:16:23,452 --> 01:16:24,910
until the edge gets
all the way in,

1578
01:16:24,910 --> 01:16:28,870
then you canonicalize what's
inside the cone, and repeat.

1579
01:16:28,870 --> 01:16:30,930
So if you had a
way to get it out,

1580
01:16:30,930 --> 01:16:32,460
you could put it
back in and keep

1581
01:16:32,460 --> 01:16:35,400
track of all the stuff
that happens on the inside.

1582
01:16:35,400 --> 01:16:37,680
That's what this theorem says.

1583
01:16:37,680 --> 01:16:42,790
And then there's just
slightly more to say.

1584
01:16:42,790 --> 01:16:49,610
If you have a flat
state, we want

1585
01:16:49,610 --> 01:16:52,180
to prove these things
are flat state connected.

1586
01:16:52,180 --> 01:16:55,400
So take some flat
state-- I really

1587
01:16:55,400 --> 01:16:58,720
should have only obtuse angles.

1588
01:16:58,720 --> 01:17:00,840
I claim this flat
state can be produced

1589
01:17:00,840 --> 01:17:04,710
using a cone of the
appropriate angle.

1590
01:17:04,710 --> 01:17:06,870
If the sharpest turn
angle here is alpha,

1591
01:17:06,870 --> 01:17:09,470
then you need an alpha cone.

1592
01:17:09,470 --> 01:17:11,010
And the way to
think about that is

1593
01:17:11,010 --> 01:17:16,541
to think of the cone moving
instead of as the chain moving.

1594
01:17:16,541 --> 01:17:17,290
It's a lot easier.

1595
01:17:17,290 --> 01:17:20,060
So you want the chain
to lie around here.

1596
01:17:20,060 --> 01:17:27,000
So you start by moving the
cone, I guess like this.

1597
01:17:27,000 --> 01:17:29,290
So that it just barely
touches the plane,

1598
01:17:29,290 --> 01:17:32,697
and this edge spews out.

1599
01:17:32,697 --> 01:17:34,363
Is that the right way
to think about it?

1600
01:17:34,363 --> 01:17:35,150
I don't know.

1601
01:17:35,150 --> 01:17:36,520
Should be like this.

1602
01:17:36,520 --> 01:17:38,280
So you take the cone.

1603
01:17:38,280 --> 01:17:41,240
This is like putting
frosting on a cake.

1604
01:17:41,240 --> 01:17:42,980
So you move your cone like here.

1605
01:17:42,980 --> 01:17:47,420
You squirt out some-- this edge.

1606
01:17:47,420 --> 01:17:51,410
Then, you do it so
that when you're here

1607
01:17:51,410 --> 01:17:55,620
and the new edge is created,
it's still in the plane.

1608
01:17:55,620 --> 01:17:58,050
And then you just sort
of move around there.

1609
01:17:58,050 --> 01:18:01,354
I'm just going to leave
it as a sketch like that.

1610
01:18:01,354 --> 01:18:02,770
Once you know that
you can produce

1611
01:18:02,770 --> 01:18:06,390
any flat state, of course,
you can reorient yourself

1612
01:18:06,390 --> 01:18:10,360
by relativity so that the chain
is moving instead of the cone.

1613
01:18:10,360 --> 01:18:12,910
So you can produce this
thing with a ribosome.

1614
01:18:12,910 --> 01:18:15,710
Once you know all flat
states can be produced

1615
01:18:15,710 --> 01:18:18,220
and you know all producible
configurations can

1616
01:18:18,220 --> 01:18:20,890
be canonicalized, then you
know it's flat state connected

1617
01:18:20,890 --> 01:18:23,510
and you know all canonical
things are flattenable and vice

1618
01:18:23,510 --> 01:18:27,400
versa, by continuous motions
without self intersection.

1619
01:18:27,400 --> 01:18:29,310
And all of this is algorithmic.

1620
01:18:29,310 --> 01:18:33,050
It can tell you how to go
from one place to another.

1621
01:18:33,050 --> 01:18:35,760
And so this is a
candidate algorithm,

1622
01:18:35,760 --> 01:18:38,290
I would say, for how
nature folds proteins.

1623
01:18:38,290 --> 01:18:39,910
Just thinking about
the mechanics,

1624
01:18:39,910 --> 01:18:41,830
not worrying about
how it's implemented.

1625
01:18:41,830 --> 01:18:44,600
Maybe you take
this model and then

1626
01:18:44,600 --> 01:18:49,950
you try to make it
physical forces,

1627
01:18:49,950 --> 01:18:51,720
and you get a way
to fold proteins.

1628
01:18:51,720 --> 01:18:53,620
That, of course,
remains a mystery.

1629
01:18:53,620 --> 01:18:58,300
But next time we will talk about
some very simple models that

1630
01:18:58,300 --> 01:19:02,300
are motivated more closely via
biology of how proteins might

1631
01:19:02,300 --> 01:19:04,840
actually fold, and talk
about the complexities

1632
01:19:04,840 --> 01:19:07,070
that you get there.

